{"version":3,"sources":["Config/Auth.js","Actions/index.js","Config/apiConfig.js","services/index.js","Components/Landing.js","utility/PrivateRoute.js","Components/utilities/Modal.js","Components/utilities/editModal.js","Components/utilities/addContact.js","Components/utilities/Table.js","Components/utilities/header.js","Components/ctm/index.js","Components/cth/index.js","App.js","Components/utilities/footer.js","Reducers/alumniData.js","Reducers/companyData.js","Reducers/ctmData.js","Reducers/userDetails.js","Reducers/alumniDetailTable.js","Reducers/companyDetailTable.js","Reducers/index.js","serviceWorker.js","index.js","assets/sflogo.png"],"names":["this","ctm_authenticated","cth_authenticated","type","callback","localStorage","setItem","removeItem","getItem","addAlumni","data","payload","addCompany","addCTM","addUser","HTTP","axios","create","baseURL","login","trackPromise","post","JSON","stringify","headers","then","res","catch","err","console","log","getData","getDetails","addUpdate","newAlumni","newCompany","getCTMS","editDetails","Landing","state","email","password","showForm","handleChange","e","setState","target","name","value","toggleForm","handleSubmit","a","preventDefault","userDetails","por","props","id","auth","history","push","alert","component","transitionName","className","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","Col","xs","Row","src","sflogo","alt","width","Card","CardBody","CardTitle","Form","onSubmit","Input","placeholder","onChange","Button","color","Component","connect","dispatch","bindActionCreators","PrivateRoute","rest","render","isAuthenticated","to","pathname","from","location","DetailModal","temp","member_id","details","update","n_updates","response","Data","toggle","modal","table","alumniTable","companyTable","onClick","Modal","isOpen","ModalHeader","ModalBody","map","row","keys","Object","updates","splice","concat","key","index","Header","accessor","ListGroup","ListGroupItem","form","md","FormGroup","ModalFooter","React","alumniDetailTable","companyDetailTable","mobile","linkedin","addr","remarks","getInitState","company_name","contact_name","Label","disabled","AddContact","formData","charAt","toUpperCase","slice","LoadingIndicator","usePromiseTracker","promiseInProgress","height","Table","setCTM","ctm_data","ctm","changeTable","tableData","columns_ctm","filterable","Cell","original","otherType","view","LoadingComponent","columns","columns_alumni","columns_company","defaultPageSize","sortable","nextProps","alumni","company","show","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","logout","CTM","allData","getAllData","alumniData","temp2","companyData","handleLogout","tableName","CTH","temp3","ctmData","App","exact","path","Footer","initialState","reducers","combineReducers","action","Boolean","window","hostname","match","store","createStore","Reducers","applyMiddleware","promise","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9b724bf4.chunk.js","sourcesContent":["class Auth {\r\n\tconstructor() {\r\n\t\tthis.ctm_authenticated = false;\r\n\t\tthis.cth_authenticated = false;\r\n\t}\r\n\r\n\tlogin(type, callback) {\r\n\t\t// (type === 'ctm') ? this.ctm_authenticated = true : this.cth_authenticated = true;\r\n\t\tlocalStorage.setItem('login_state', type);\r\n\t\tcallback();\r\n\t}\r\n\r\n\tlogout(callback) {\r\n\t\t// this.ctm_authenticated = false;\r\n\t\t// this.cth_authenticated = false;\r\n\t\tlocalStorage.setItem('login_state', false);\r\n\t\tlocalStorage.removeItem('id');\r\n\t\tcallback();\r\n\t}\r\n\r\n\tisAuthenticated() {\r\n\t\t// return this.ctm_authenticated || this.cth_authenticated;\r\n\t\treturn localStorage.getItem('login_state');\r\n\t}\r\n}\r\n\r\nexport default new Auth()","export const addAlumni = (data) => {\r\n    return {\r\n        type: 'ADD_ALUMNI_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addCompany = (data) => {\r\n    return {\r\n        type: 'ADD_COMPANY_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addCTM = (data) => {\r\n    return {\r\n        type: 'ADD_CTM_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addUser = (data) => {\r\n    return {\r\n        type: 'ADD_USER_DETAILS',\r\n        payload: data\r\n    }\r\n};","import axios from 'axios';\r\n\r\nexport const HTTP = axios.create({\r\n\tbaseURL: \"http://localhost:8000\"\r\n});","import { HTTP } from '../Config/apiConfig'\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nexport const login = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/login', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}));\r\n\r\nexport const getData = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getdata', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const getDetails = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getdetails', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const addUpdate = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addupdate', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const newAlumni = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addalumni', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const newCompany = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addcompany', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const getCTMS = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getctms', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const editDetails = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/editdetail', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))","import React, { Component, Fragment } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport auth from '../Config/Auth'\r\nimport { addUser } from '../Actions'\r\nimport { login } from '../services'\r\nimport sflogo from '../assets/sflogo.png'\r\nimport '../Stylesheets/Landings.sass'\r\n\r\nimport { \r\n\tForm, Input,\r\n\tButton,\r\n\tRow, Col,\r\n\tCard, CardBody, CardTitle\r\n} from 'reactstrap';\r\n\r\nclass Landing extends Component {\r\n\tstate = {\r\n\t\tdata: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t},\r\n\t\tshowForm: false\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tdata: {\r\n\t\t\t\t...this.state.data,\r\n\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleForm = () => {\r\n\t\tthis.setState({ showForm: !this.state.showForm })\r\n\t}\r\n\r\n\thandleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst userDetails = await login(this.state.data);\r\n\t\tif (userDetails.data.por === 'ctm' || userDetails.data.por === 'cth') {\r\n\t\t\tthis.props.addUser(userDetails.data);\r\n\t\t\tlocalStorage.setItem('id', userDetails.data.id);\r\n\t\t\tauth.login(userDetails.data.por, () => {\r\n\t\t\t\tthis.props.history.push('/' + userDetails.data.por)\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(userDetails.data);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<ReactCSSTransitionGroup\r\n          component=\"div\"\r\n          transitionName=\"TabsAnimation\"\r\n          className = {\"h-80\"}\r\n          transitionAppear={true}\r\n          transitionAppearTimeout={0}\r\n          transitionEnter={false}\r\n          transitionLeave={false}>\r\n\t\t\t\t\t<Col xs=\"12\">\r\n\t\t\t\t\t\t<Row className=\"mt-4\">\r\n\t\t\t\t\t\t\t<Col className= \"col-xs-12 col-md-7 font-size-lg text-center\">\r\n\t\t\t\t\t\t\t\t<img src={sflogo} alt=\"SF-logo\" width=\"300rem\"/>\r\n\t\t\t\t\t\t\t\t<h1 className=\"pe-4x\">SF Diary</h1>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col className=\"col-xs-6 col-md-4\">\r\n\t\t\t\t\t\t\t\t<Card className=\"main-card mb-3\">\r\n\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t<CardTitle className=\"text-center pe-2x\">Login</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.data.email} onChange={this.handleChange}/><br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.data.password} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" className=\"mt-3\">Login</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</ReactCSSTransitionGroup>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\t\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddUser: addUser\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Landing);","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from '../Config/Auth'\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route \r\n\t\t\t{...rest}\r\n\t\t\trender = {(props) => \r\n\t\t\t\t(auth.isAuthenticated()) ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) :(\r\n\t\t\t\t\t<Redirect to = {{\r\n\t\t\t\t\t\tpathname: '/',\r\n\t\t\t\t\t\tstate: { from: props.location }\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\t \r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}","import React from 'react';\r\nimport {\r\n    Button, Row, Col,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup,\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { getDetails, addUpdate, getData } from '../../services'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nclass DetailModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            value: '',\r\n            details: {},\r\n            table: []\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.value) {\r\n            alert(\"Field is empty\");\r\n        }\r\n        else {\r\n            const temp = {\r\n                id: this.props.id,\r\n                member_id: this.state.details.member_id,\r\n                update: this.state.value,\r\n                type: this.props.type,\r\n                n_updates: this.state.details.n_updates\r\n            };\r\n            const response = await addUpdate(temp);\r\n            console.log(temp);\r\n            const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n            (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\r\n            alert(response.data);\r\n            this.toggle();\r\n        }\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    toggle = async () => {\r\n        if (!this.state.modal) {\r\n            const temp = {\r\n                id: this.props.id,\r\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\r\n            };\r\n            const details = await getDetails(temp);\r\n            this.setState({\r\n                details: details.data\r\n            });\r\n        }\r\n        this.setState({\r\n            table: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? this.props.alumniTable : this.props.companyTable,\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                {\r\n                    (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                    ? <Button color=\"primary\" onClick={this.toggle}>Details</Button> : \r\n                    <Button color=\"primary\" onClick={this.toggle}>Update</Button>\r\n                }\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    {\r\n                        (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                        ? <ModalHeader toggle={this.toggle}>Details</ModalHeader> : \r\n                        <ModalHeader toggle={this.toggle}>Update</ModalHeader>\r\n                    }\r\n                    <ModalBody>\r\n                        <table className=\"w-100\">\r\n                            <tbody>\r\n                            {\r\n                                this.state.table.map((row) => {\r\n                                    const keys = Object.keys(this.state.details);\r\n                                    const updates = keys.splice(9, 2*(this.state.details.n_updates-1)).concat(keys.splice(-3, 1), keys.splice(-1, 1));\r\n                                    return (\r\n                                        <tr key={row.index}>\r\n                                            <td>{row.Header}</td>\r\n                                            <td>{(row.accessor !== 'updates') \r\n                                                ? this.state.details[row.accessor]\r\n                                                : <ListGroup>\r\n                                                        {updates.map((update, index) => {\r\n                                                            return (\r\n                                                                <ListGroupItem \r\n                                                                className={\"border-0 p-0\"} \r\n                                                                key={update}>\r\n                                                                    {((index%2) ? \"- \" : \"\") + this.state.details[update]}\r\n                                                                </ListGroupItem>\r\n                                                            );\r\n                                                        })}\r\n                                                  </ListGroup>}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                            ? \"\" : \r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Row form>\r\n                                    <Col md={8}><FormGroup><Input type=\"text\" placeholder=\"Add Update\" value={this.state.value} onChange={this.handleChange} /></FormGroup></Col>\r\n                                    <Col md={4}><Button className=\"float-left\">Add Update</Button></Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alumniTable: state.alumniDetailTable,\r\n        companyTable: state.companyDetailTable\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup, Label\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { getDetails, getData, editDetails } from '../../services'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nclass DetailModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitState();\r\n    }\r\n\r\n    getInitState() {\r\n        const initState = {\r\n            modal: false,\r\n            details: {\r\n                company_name: '',\r\n                name: '',\r\n                contact_name: '',\r\n                mobile: '',\r\n                email: '',\r\n                linkedin: '',\r\n                addr: '',\r\n                post: '',\r\n                remarks: '',\r\n            }\r\n        };\r\n        return initState;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            details: {\r\n                ...this.state.details,\r\n                [e.target.name]: e.target.value\r\n            }})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const temp = {\r\n            id: this.props.data.id,\r\n            member_id: this.state.details.member_id,\r\n            type: this.props.type,\r\n            mobile: this.state.details.mobile,\r\n            email: this.state.details.email,\r\n            linkedin: (this.state.details.linkedin) ? this.state.details.linkedin : '',\r\n            addr: this.state.details.addr,\r\n            post: (this.state.details.post) ? this.state.details.post : '',\r\n            remarks: this.state.details.remarks\r\n        };\r\n        const response = await editDetails(temp);\r\n        const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n        (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\r\n        alert(response.data);\r\n        this.toggle();\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    toggle = async () => {\r\n        if (!this.state.modal) {\r\n            const temp = {\r\n                id: this.props.data.id,\r\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\r\n            };\r\n            const details = await getDetails(temp);\r\n            this.setState({\r\n                modal: true,\r\n                details: details.data\r\n            });\r\n        }\r\n        else this.setState(this.getInitState());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                <Button onClick={this.toggle}>Edit</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup><Label>Name</Label><Input type=\"text\" disabled name=\"name\" value={(this.props.type === \"company\") ? this.state.details.company_name : this.state.details.name} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"company\") ?\r\n                                    <FormGroup><Label>Contact Name</Label><Input disabled type=\"text\" placeholder=\"Contact Person name\" name=\"contact_name\" value={this.state.details.contact_name} /></FormGroup>\r\n                                     : \"\"\r\n                            }\r\n                            <FormGroup><Label>Phone No</Label><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.details.mobile} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Label>Email</Label><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.details.email} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"alumni\") ?\r\n                                    <FormGroup><Label>LinkedIn</Label><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.details.linkedin} onChange={this.handleChange} /></FormGroup>\r\n                                    : <FormGroup><Label>Post</Label><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.details.post} onChange={this.handleChange} /></FormGroup>\r\n                            }\r\n                            <FormGroup><Label>Address</Label><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.details.addr} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Label>Remarks</Label><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.details.remarks} onChange={this.handleChange} /></FormGroup>\r\n                            <Button>Save</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alumniTable: state.alumniDetailTable,\r\n        companyTable: state.companyDetailTable\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { newAlumni, newCompany, getData } from '../../services'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nclass AddContact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitState();\r\n    }\r\n\r\n    getInitState() {\r\n        const initState = {\r\n            modal: false,\r\n            formData: {\r\n                name: '',\r\n                contact_name: '',\r\n                mobile: '',\r\n                email: '',\r\n                post: '',\r\n                linkedin: '',\r\n                addr: '',\r\n                remarks: '',\r\n                update: ''\r\n            }\r\n        };\r\n        return initState;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.formData.name && !this.state.formData.mobile && !this.state.formData.update ) {\r\n            alert(\"Fill all fields\");\r\n        }\r\n        else {\r\n            if (this.props.type === \"alumni\") {\r\n                const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    name: this.state.formData.name,\r\n                    mobile: this.state.formData.mobile,\r\n                    email: this.state.formData.email,\r\n                    linkedin: this.state.formData.linkedin,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks,\r\n                    update: this.state.formData.update\r\n                };\r\n                const response = await newAlumni(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addAlumni(Data.data);\r\n                alert(response.data);\r\n            }\r\n            else {\r\n                const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    company_name: this.state.formData.name,\r\n                    contact_name: this.state.formData.contact_name,\r\n                    mobile: this.state.formData.mobile,\r\n                    email: this.state.formData.email,\r\n                    update: this.state.formData.update,\r\n                    post: this.state.formData.post,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks\r\n                };\r\n                const response = await newCompany(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addCompany(Data.data);\r\n                alert(response.data);\r\n            }\r\n            this.toggle();\r\n        }\r\n        this.setState(this.getInitState());\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                <Button color=\"primary\" onClick={this.toggle}>Add Contact</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle}>Add {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)} Contact</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup><Input type=\"text\" placeholder={(this.props.type === \"alumni\") ?\"Name\" : \"Comapny Name\"} name=\"name\" value={this.state.formData.name} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"company\") ?\r\n                                    <FormGroup><Input type=\"text\" placeholder=\"Contact Person name\" name=\"contact_name\" value={this.state.formData.contact_name} onChange={this.handleChange} /></FormGroup>\r\n                                     : \"\"\r\n                            }\r\n                            <FormGroup><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.formData.mobile} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.formData.email} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"alumni\") ?\r\n                                    <FormGroup><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.formData.linkedin} onChange={this.handleChange} /></FormGroup>\r\n                                    : <FormGroup><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.formData.post} onChange={this.handleChange} /></FormGroup>\r\n                            }\r\n                            <FormGroup><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.formData.addr} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"text\" placeholder=\"First Update\" name=\"update\" value={this.state.formData.update} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.formData.remarks} onChange={this.handleChange} /></FormGroup>\r\n                            <Button>Add Contact</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AddContact);\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'reactstrap'\r\nimport ReactTable from 'react-table'\r\nimport 'react-table/react-table.css'\r\nimport DetailModal from './Modal'\r\nimport EditModal from './editModal'\r\nimport AddContact from './addContact'\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoadingIndicator = props => {\r\n\tconst { promiseInProgress } = usePromiseTracker();\r\n\r\n  return promiseInProgress && <div className=\"loader t-container text-center\">\r\n  \t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} />\r\n    </div>\r\n}  \r\n\r\nclass Table extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tctm: {},\r\n\t\t\ttableData: [],\r\n\t\t\tcolumns_ctm: [{ \r\n\t\t\t\t\tHeader: 'Name',\r\n\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t},{\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Email',\r\n\t\t\t\t\taccessor: 'email'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<Button color=\"primary\" onClick={() => this.setCTM(props.original)}>View</Button>)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\tsetCTM = (ctm_data) => {\r\n\t\tthis.setState({ctm: ctm_data});\r\n\t\tthis.props.changeTable(\"ctmAlumni\", ctm_data.id);\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps) {\r\n\t\treturn {\r\n\t\t\ttableData: (nextProps.type === 'alumni' || nextProps.type === 'ctmAlumni') \r\n\t\t\t\t\t\t\t\t ? nextProps.alumni \r\n\t\t\t\t\t\t\t\t : (nextProps.type === \"ctm\") \r\n\t\t\t\t\t\t\t\t ? nextProps.ctm \r\n\t\t\t\t\t\t\t\t : nextProps.company,\r\n\t\t\tcolumns_alumni: [{ \r\n\t\t\t\t\tHeader: 'Name',\r\n\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update',\r\n\t\t\t\t\taccessor: 'last_update'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update Date',\r\n\t\t\t\t\taccessor: 'updated_at'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 80,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\tshow: (nextProps.type === \"alumni\"),\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tcolumns_company: [{ \r\n\t\t\t\t\tHeader: 'Company Name',\r\n\t\t\t\t\taccessor: 'company_name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t},{ \r\n\t\t\t\t\tHeader: 'Contact Name',\r\n\t\t\t\t\taccessor: 'contact_name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update',\r\n\t\t\t\t\taccessor: 'last_update'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update Date',\r\n\t\t\t\t\taccessor: 'updated_at'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 80,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\tshow: (nextProps.type === \"company\"),\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet otherType = (this.props.type === \"ctmAlumni\") ? \"ctmCompany\" : (this.props.type === \"ctmCompany\") ? \"ctmAlumni\" : \"\";\r\n\t\treturn (\r\n\t\t\t(this.props.view === \"ctm\") ?\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t<div className=\"float-right\"><AddContact type={this.props.type}/></div>\r\n\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Contacts\"}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"t-container overflow-hidden\">\r\n\t\t\t\t\t<ReactTable \r\n\t\t\t\t\t\tdata = {this.state.tableData}\r\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\r\n\t\t\t\t\t\tcolumns = {(this.props.type === 'alumni') ? this.state.columns_alumni : this.state.columns_company}\r\n\t\t\t\t\t\tdefaultPageSize = {10}\r\n\t\t\t\t\t\tsortable = {false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment> :\r\n\t\t\t<Fragment>\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") ? \r\n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t\t<Button className=\"float-right mr-4\" onClick={() => this.props.changeTable(otherType, this.state.ctm.id)}>View {otherType} updates</Button>\r\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Updates (\"+ this.state.ctm.name +\")\"}</h2>\r\n\t\t\t\t\t</div> :\r\n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t\t{(this.props.type === \"ctm\") ? \"\" : <div className=\"float-right\"><AddContact type={this.props.type}/></div>}\r\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}</h2>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"t-container overflow-hidden\">\r\n\t\t\t\t\t<ReactTable \r\n\t\t\t\t\t\tdata = {this.state.tableData}\r\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\r\n\t\t\t\t\t\tcolumns = {\r\n\t\t\t\t\t\t\t(this.props.type === 'alumni' || this.props.type === 'ctmAlumni') \r\n\t\t\t\t\t\t\t? this.state.columns_alumni \r\n\t\t\t\t\t\t\t: (this.props.type === 'company' || this.props.type === 'ctmCompany') \r\n\t\t\t\t\t\t\t? this.state.columns_company\r\n\t\t\t\t\t\t\t: this.state.columns_ctm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefaultPageSize = {10}\r\n\t\t\t\t\t\tsortable = {false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\talumni: state.alumni,\r\n\t\tcompany: state.company,\r\n\t\tctm: state.ctm\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);","import React, {Fragment} from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport sflogo from '../../assets/sflogo.png'\r\nimport {\r\n    Collapse, Navbar, NavbarToggler, NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap'\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    className={\"app-header header-shadow\"}\r\n                    transitionName=\"HeaderAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={1500}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                        <div className=\"w-100\">\r\n                            <Navbar light expand=\"md\">\r\n                                <NavbarBrand className=\"mr-auto\">\r\n                                    <img className=\"float-left\" src={sflogo} alt=\"SF-logo\" width=\"40px\"/>\r\n                                    <h2 className=\"ml-2 float-left\">SF diary</h2>\r\n                                </NavbarBrand>\r\n                                <NavbarToggler onClick={this.toggle} />\r\n                                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                                        <Nav className=\"ml-auto\" navbar>\r\n                                            {\r\n                                                (this.props.type === 'cth')\r\n                                                ? <NavItem onClick={() => this.props.changeTable('ctm')}><NavLink>CTM</NavLink></NavItem>\r\n                                                : \"\"\r\n                                            } \r\n                                            <NavItem onClick={() => this.props.changeTable('alumni')}><NavLink>Alumni</NavLink></NavItem>\r\n                                            <NavItem onClick={() => this.props.changeTable('company')}><NavLink>Company</NavLink></NavItem>\r\n                                            <NavItem onClick={() => this.props.logout()}><NavLink>Log Out</NavLink></NavItem>\r\n                                        </Nav>\r\n                                    </Collapse>\r\n                            </Navbar>\r\n                        </div>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component, Fragment } from 'react'\r\nimport auth from '../../Config/Auth'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\nimport Table from '../utilities/Table'\r\nimport { getData } from '../../services'\r\nimport Header from '../utilities/header'\r\n\r\nclass CTM extends Component {\r\n\tstate = {\r\n\t\ttable: 'alumni',\r\n\t\tallData: false\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (auth.isAuthenticated() !== 'ctm') {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\telse await this.getAllData();\r\n\t}\r\n\r\n\tgetAllData = async () => {\r\n\t\tconst temp = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'alumni'\r\n\t\t};\r\n\t\tconst alumniData = await getData(temp);\r\n\t\tthis.props.addAlumni(alumniData.data);\r\n\t\t\r\n\t\tconst temp2 = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'company'\r\n\t\t};\r\n\t\tconst companyData = await getData(temp2);\r\n\t\tthis.props.addCompany(companyData.data);\r\n\t}\r\n\r\n\thandleLogout = () => {\r\n\t\tthis.props.addAlumni([]);\r\n\t\tthis.props.addCompany([]);\r\n\t\tauth.logout(() => {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\tchangeTable = async (tableName) => {\r\n\t\tawait this.getAllData();\r\n\t\tthis.setState({ table: tableName });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n        \t<Header changeTable={this.changeTable} type=\"ctm\" logout={this.handleLogout}/>\r\n\t\t\t\t\t<Table view=\"ctm\" type={this.state.table} id={localStorage.getItem('id')}/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuserDetails: state.userDetails\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddAlumni: addAlumni,\r\n\t\taddCompany: addCompany\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(CTM);","import React, { Component, Fragment } from 'react'\r\nimport auth from '../../Config/Auth'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { addAlumni, addCompany, addCTM } from '../../Actions'\r\nimport Table from '../utilities/Table'\r\nimport { getData, getCTMS } from '../../services'\r\nimport Header from '../utilities/header'\r\n\r\nclass CTH extends Component {\r\n\tstate = {\r\n\t\ttable: 'alumni'\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (auth.isAuthenticated() !== 'cth') {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\telse await this.getAllData(localStorage.getItem('id'));\r\n\t}\r\n\r\n\tgetAllData = async (id) => {\r\n\t\tconst temp = {\r\n\t\t\tid: id,\r\n\t\t\ttype: 'alumni'\r\n\t\t};\r\n\t\tconst alumniData = await getData(temp);\r\n\t\tthis.props.addAlumni(alumniData.data);\r\n\t\t\r\n\t\tconst temp2 = {\r\n\t\t\tid: id,\r\n\t\t\ttype: 'company'\r\n\t\t};\r\n\t\tconst companyData = await getData(temp2);\r\n\t\tthis.props.addCompany(companyData.data);\r\n\r\n\t\tconst temp3 = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'cth'\r\n\t\t};\r\n\t\tconst ctmData = await getCTMS(temp3);\r\n\t\tthis.props.addCTM(ctmData.data);\r\n\t}\r\n\r\n\thandleLogout = () => {\r\n\t\tthis.props.addAlumni([]);\r\n\t\tthis.props.addCompany([]);\r\n\t\tthis.props.addCTM([]);\r\n\t\tauth.logout(() => {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\tchangeTable = async (tableName, id=localStorage.getItem('id')) => {\r\n\t\tawait this.getAllData(id);\r\n\t\tthis.setState({ table: tableName })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n        \t<Header changeTable={this.changeTable} type=\"cth\" logout={this.handleLogout}/>\r\n        \t<Table view=\"cth\" type={this.state.table} changeTable={this.changeTable}/>\r\n\t\t\t\t\t{/*(this.state.table === 'ctm') ? <CTMTable /> : <Table type={this.state.table} />*/}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuserDetails: state.userDetails\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddAlumni: addAlumni,\r\n\t\taddCompany: addCompany,\r\n\t\taddCTM: addCTM\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(CTH);","import React from 'react';\nimport './Stylesheets/base.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Landing from './Components/Landing'\nimport {PrivateRoute} from './utility/PrivateRoute'\nimport CTM from './Components/ctm'\nimport CTH from './Components/cth'\n\nfunction App() {\n  return (\n  \t<BrowserRouter>\n  \t\t<Switch>\n\t\t    <Route exact path = '/' component = {Landing} />\n\t\t    <PrivateRoute path = '/ctm' component = {CTM} />\n\t\t    <PrivateRoute path = '/cth' component = {CTH} />\n\t\t    <Route path=\"*\" component={() => \"404 Not Found\"} />\n\t    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React, {Fragment} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nclass Footer extends React.Component {\r\n\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app-footer newFooter\">\r\n                    <div className=\"app-footer__inner\">\r\n                        <div className=\"app-footer-right\">\r\n                            <span className=\"d-inline-block mb-2 mr-2\">\r\n                                <Button color=\"link\" onClick={this.toggle}>Credits</Button>\r\n                                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                                    <ModalHeader toggle={this.toggle}>Credits</ModalHeader>\r\n                                    <ModalBody>\r\n                                        Kashish Goyal\r\n                                    </ModalBody>\r\n                                    <ModalFooter>\r\n                                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                                    </ModalFooter>\r\n                                </Modal>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )}\r\n}\r\n\r\nexport default Footer;","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_ALUMNI_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_COMPANY_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_CTM_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_USER_DETAILS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [\r\n\t{\r\n    Header: 'Name',\r\n    accessor: 'name',\r\n\tindex: 1\r\n    },\r\n\t{\r\n    Header: 'Phone No',\r\n    accessor: 'mobile',\r\n\tindex: 2\r\n    },\r\n\t{\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n\tindex: 3\r\n    },\r\n\t{\r\n    Header: 'LinkedIn Link',\r\n    accessor: 'linkedin',\r\n\tindex: 4\r\n    },\r\n\t{\r\n    Header: 'Address',\r\n    accessor: 'addr',\r\n\tindex: 5\r\n    },\r\n\t{\r\n    Header: 'Remarks',\r\n    accessor: 'remarks',\r\n\tindex: 6\r\n    },\r\n\t{\r\n    Header: 'Updates',\r\n    accessor: 'updates',\r\n\tindex: 7\r\n    }\r\n];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ALUMNI_DETAIL_TABLE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [\r\n\t{\r\n    Header: 'Compay Name',\r\n    accessor: 'company_name',\r\n\tindex: 1\r\n    },\r\n    {\r\n    Header: 'Contact Person Name',\r\n    accessor: 'contact_name',\r\n    index: 2\r\n    },\r\n\t{\r\n    Header: 'Phone No',\r\n    accessor: 'mobile',\r\n\tindex: 3\r\n    },\r\n\t{\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n\tindex: 4\r\n    },\r\n\t{\r\n    Header: 'Post of Contact',\r\n    accessor: 'post',\r\n\tindex: 5\r\n    },\r\n\t{\r\n    Header: 'Address',\r\n    accessor: 'addr',\r\n\tindex: 6\r\n    },\r\n\t{\r\n    Header: 'Remarks',\r\n    accessor: 'remarks',\r\n\tindex: 7\r\n    },\r\n\t{\r\n    Header: 'Updates',\r\n    accessor: 'updates',\r\n\tindex: 8\r\n    }\r\n];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'COMPANY_DETAIL_TABLE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alumniData from './alumniData'\r\nimport companyData from './companyData'\r\nimport ctmData from './ctmData'\r\nimport userDetails from './userDetails'\r\nimport alumniDetailTable from './alumniDetailTable'\r\nimport companyDetailTable from './companyDetailTable'\r\n\r\nconst reducers = combineReducers({\r\n\talumni: alumniData,\r\n\tcompany: companyData,\r\n\tuserDetails: userDetails,\r\n\talumniDetailTable: alumniDetailTable,\r\n\tcompanyDetailTable: companyDetailTable,\r\n\tctm: ctmData\r\n});\r\n\r\nexport default reducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Footer from './Components/utilities/footer'\nimport {createStore, applyMiddleware} from 'redux';\nimport Reducers from \"./Reducers\";\nimport { Provider } from \"react-redux\";\nimport promise from 'redux-promise-middleware'\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(\n  Reducers,\n  applyMiddleware(promise)\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t\t<Footer />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sflogo.98f322d5.png\";"],"sourceRoot":""}