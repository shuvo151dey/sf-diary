{"version":3,"sources":["Config/Auth.js","Actions/index.js","Config/apiConfig.js","services/index.js","Components/Landing.js","utility/PrivateRoute.js","Components/utilities/Modal.js","Components/utilities/editModal.js","Components/utilities/addContact.js","Components/utilities/Table.js","Components/utilities/header.js","Components/ctm/index.js","Components/cth/index.js","App.js","Components/utilities/footer.js","Reducers/alumniData.js","Reducers/companyData.js","Reducers/ctmData.js","Reducers/userDetails.js","Reducers/alumniDetailTable.js","Reducers/companyDetailTable.js","Reducers/index.js","serviceWorker.js","index.js","assets/sflogo.png"],"names":["this","ctm_authenticated","cth_authenticated","type","callback","localStorage","setItem","removeItem","getItem","addAlumni","data","payload","addCompany","addCTM","addUser","HTTP","axios","create","baseURL","login","trackPromise","post","JSON","stringify","headers","then","res","catch","err","console","log","getData","getDetails","newAlumni","newCompany","Landing","state","email","password","showForm","handleChange","e","setState","target","name","value","toggleForm","handleSubmit","a","preventDefault","userDetails","por","props","id","auth","history","push","alert","component","transitionName","className","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","Col","xs","Row","src","sflogo","alt","width","Card","CardBody","CardTitle","Form","onSubmit","Input","placeholder","onChange","Button","color","Component","connect","dispatch","bindActionCreators","PrivateRoute","rest","render","isAuthenticated","to","pathname","from","location","require","config","gapi","window","DetailModal","handleClick","gc_title","gc_time","gc_date","load","client","init","apiKey","process","clientId","discoveryDocs","gCalendar","DISCOVERY_DOCS","scope","SCOPES","auth2","getAuthInstance","signIn","endtime","h","Number","slice","event","gc_body","calendar","events","insert","execute","link","htmlLink","event_message","Alert","href","er","error","temp","member_id","details","update","n_updates","Data","toggle","modal","table","alumniTable","companyTable","onClick","Modal","isOpen","ModalHeader","ModalBody","map","row","keys","Object","updates","splice","concat","key","index","Header","accessor","ListGroup","ListGroupItem","form","md","FormGroup","CardHeader","Label","ModalFooter","React","alumniDetailTable","companyDetailTable","mobile","linkedin","addr","remarks","response","getInitState","company_name","contact_name","disabled","AddContact","formData","code","charAt","toUpperCase","LoadingIndicator","usePromiseTracker","promiseInProgress","height","filterCaseInsensitive","filter","pivotId","undefined","String","toLowerCase","startsWith","Table","setCTM","ctm_data","ctm","changeTable","tableData","columns_ctm","filterable","Cell","original","otherType","view","LoadingComponent","columns","columns_alumni","columns_company","defaultPageSize","sortable","defaultFilterMethod","nextProps","alumni","company","show","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","logout","CTM","i","setTimeout","logoutTimeout","autoLogout","handleLogout","resetTimeout","clearTimeout","destroy","removeEventListener","getAllData","alumniData","temp2","companyData","tableName","allData","addEventListener","CTH","temp3","ctmData","App","exact","path","Footer","initialState","reducers","combineReducers","action","Boolean","hostname","match","store","createStore","Reducers","applyMiddleware","promise","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3661a3c0.chunk.js","sourcesContent":["class Auth {\r\n\tconstructor() {\r\n\t\tthis.ctm_authenticated = false;\r\n\t\tthis.cth_authenticated = false;\r\n\t}\r\n\r\n\tlogin(type, callback) {\r\n\t\t// (type === 'ctm') ? this.ctm_authenticated = true : this.cth_authenticated = true;\r\n\t\tlocalStorage.setItem('login_state', type);\r\n\t\tcallback();\r\n\t}\r\n\r\n\tlogout(callback) {\r\n\t\t// this.ctm_authenticated = false;\r\n\t\t// this.cth_authenticated = false;\r\n\t\tlocalStorage.setItem('login_state', false);\r\n\t\tlocalStorage.removeItem('id');\r\n\t\tcallback();\r\n\t}\r\n\r\n\tisAuthenticated() {\r\n\t\t// return this.ctm_authenticated || this.cth_authenticated;\r\n\t\treturn localStorage.getItem('login_state');\r\n\t}\r\n}\r\n\r\nexport default new Auth()","export const addAlumni = (data) => {\r\n    return {\r\n        type: 'ADD_ALUMNI_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addCompany = (data) => {\r\n    return {\r\n        type: 'ADD_COMPANY_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addCTM = (data) => {\r\n    return {\r\n        type: 'ADD_CTM_DATA',\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const addUser = (data) => {\r\n    return {\r\n        type: 'ADD_USER_DETAILS',\r\n        payload: data\r\n    }\r\n};","import axios from 'axios';\r\n\r\nexport const HTTP = axios.create({\r\n\tbaseURL: \"https://mainapi.springfest.in\"\r\n});","import { HTTP } from '../Config/apiConfig'\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nexport const login = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/login', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}));\r\n\r\nexport const getData = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getdata', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const getDetails = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getdetails', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const addUpdate = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addupdate', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const newAlumni = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addalumni', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const newCompany = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/addcompany', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const getCTMS = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/getctms', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))\r\n\r\nexport const editDetails = (data) => \r\n\ttrackPromise(HTTP.post('sfdiary/editdetail', JSON.stringify(data), {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t}).then(res => {\r\n\t\treturn res.data;\r\n\t}).catch(err => {\r\n\t\tconsole.log(err);\r\n\t\treturn null;\r\n\t}))","import React, { Component, Fragment } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport auth from '../Config/Auth'\r\nimport { addUser } from '../Actions'\r\nimport { login } from '../services'\r\nimport sflogo from '../assets/sflogo.png'\r\nimport '../Stylesheets/Landings.sass'\r\n\r\nimport { \r\n\tForm, Input,\r\n\tButton,\r\n\tRow, Col,\r\n\tCard, CardBody, CardTitle\r\n} from 'reactstrap';\r\n\r\nclass Landing extends Component {\r\n\tstate = {\r\n\t\tdata: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t},\r\n\t\tshowForm: false\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tdata: {\r\n\t\t\t\t...this.state.data,\r\n\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleForm = () => {\r\n\t\tthis.setState({ showForm: !this.state.showForm })\r\n\t}\r\n\r\n\thandleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst userDetails = await login(this.state.data);\r\n\t\tif (userDetails.data.por === 'ctm' || userDetails.data.por === 'cth') {\r\n\t\t\tthis.props.addUser(userDetails.data);\r\n\t\t\tlocalStorage.setItem('id', userDetails.data.id);\r\n\t\t\tauth.login(userDetails.data.por, () => {\r\n\t\t\t\tthis.props.history.push('/' + userDetails.data.por)\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(userDetails.data);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<ReactCSSTransitionGroup\r\n          component=\"div\"\r\n          transitionName=\"TabsAnimation\"\r\n          className = {\"h-80\"}\r\n          transitionAppear={true}\r\n          transitionAppearTimeout={0}\r\n          transitionEnter={false}\r\n          transitionLeave={false}>\r\n\t\t\t\t\t<Col xs=\"12\">\r\n\t\t\t\t\t\t<Row className=\"mt-4\">\r\n\t\t\t\t\t\t\t<Col className= \"col-xs-12 col-md-7 font-size-lg text-center\">\r\n\t\t\t\t\t\t\t\t<img src={sflogo} alt=\"SF-logo\" width=\"300rem\"/>\r\n\t\t\t\t\t\t\t\t<h1 className=\"pe-4x\">SF Diary</h1>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col className=\"col-xs-6 col-md-4\">\r\n\t\t\t\t\t\t\t\t<Card className=\"main-card mb-3\">\r\n\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t<CardTitle className=\"text-center pe-2x\">Login</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.data.email} onChange={this.handleChange}/><br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.data.password} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" className=\"mt-3\">Login</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</ReactCSSTransitionGroup>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\t\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddUser: addUser\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Landing);","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from '../Config/Auth'\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route \r\n\t\t\t{...rest}\r\n\t\t\trender = {(props) => \r\n\t\t\t\t(auth.isAuthenticated()) ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) :(\r\n\t\t\t\t\t<Redirect to = {{\r\n\t\t\t\t\t\tpathname: '/',\r\n\t\t\t\t\t\tstate: { from: props.location }\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\t \r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}","import React from 'react';\r\nimport {\r\n    Button, Row, Col,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup,\r\n    ListGroup, ListGroupItem, Label, Card, CardHeader, CardBody, Alert\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { getDetails, addUpdate, getData } from '../../services'\r\nimport gCalendar from '../../Config/gCalendarConfig.json'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nrequire('dotenv').config()\r\nvar gapi = window.gapi\r\nclass DetailModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            value: '',\r\n            details: {},\r\n            table: [],\r\n            gc_title: \"\",\r\n            gc_body: \"\",\r\n            gc_date: \"\",\r\n            gc_time: \"\",\r\n            event_message: \"\"\r\n        };\r\n    } \r\n    handleClick = () => {\r\n        var callback = (link) => {\r\n            //window.open(link);\r\n            this.setState({event_message: (\r\n                <Alert color=\"success\">\r\n                    The event is successfully created. Go to:<br/> \r\n                    <a href={link} target=\"_blank\">{link}</a>.\r\n                </Alert>\r\n            )})\r\n        }\r\n        if (!this.state.gc_title) {\r\n            alert(\"Event title is required\")\r\n            return\r\n        }\r\n        if (!this.state.gc_time) {\r\n            alert(\"Event time is required\")\r\n            return\r\n        }\r\n        if (!this.state.gc_date) {\r\n            alert(\"Event date is required\")\r\n            return\r\n        }\r\n        gapi.load('client:auth2', () => {\r\n            console.log(\"gapi loaded\")\r\n            gapi.client.init({\r\n                apiKey: process.env.REACT_APP_API_KEY,\r\n                clientId: process.env.REACT_APP_CLIENT_ID,\r\n                discoveryDocs: gCalendar.DISCOVERY_DOCS,\r\n                scope: gCalendar.SCOPES\r\n            })\r\n            gapi.client.load('calendar', 'v3', ()=> {console.log('OK!')})\r\n            gapi.auth2.getAuthInstance().signIn()\r\n            .then(() => {\r\n                var endtime = this.state.gc_time\r\n                var h = Number(endtime.slice(0, 2))+1\r\n                endtime = ('0' + h).slice(-2) + endtime.slice(2)\r\n                var event = {\r\n                    'summary': this.state.gc_title,\r\n                    'description': this.state.gc_body,\r\n                    'start': {\r\n                        'dateTime': this.state.gc_date+'T'+this.state.gc_time+':00',\r\n                        'timeZone': 'Asia/Kolkata'\r\n                    },\r\n                    'end': {\r\n                        'dateTime': this.state.gc_date+'T'+endtime+':00',\r\n                        'timeZone': 'Asia/Kolkata'\r\n                    },\r\n                    'reminders': {\r\n                        'useDefault': false,\r\n                        'overrides': [\r\n                            {'method': 'popup', 'minutes': 120},\r\n                            {'method': 'popup', 'minutes': 30}\r\n                        ]\r\n                    }\r\n                };\r\n                var request = gapi.client.calendar.events.insert({\r\n                    'calendarId': 'primary',\r\n                    'resource': event\r\n                });\r\n                    \r\n                request.execute(function(event) {\r\n                    callback(event.htmlLink)\r\n                });\r\n            }).catch((er) => {\r\n                console.log(er.error)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.value) {\r\n            alert(\"Field is empty\");\r\n        }\r\n        else {\r\n            const temp = {\r\n                id: this.props.id,\r\n                member_id: this.state.details.member_id,\r\n                update: this.state.value,\r\n                type: this.props.type,\r\n                n_updates: this.state.details.n_updates\r\n            };\r\n            const response = await addUpdate(temp);\r\n            console.log(temp);\r\n            const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n            (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\r\n            this.toggle();\r\n        }\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    toggle = async () => {\r\n        if (!this.state.modal) {\r\n            const temp = {\r\n                id: this.props.id,\r\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\r\n            };\r\n            const details = await getDetails(temp);\r\n            this.setState({\r\n                details: details.data\r\n            });\r\n        }\r\n        this.setState({\r\n            table: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? this.props.alumniTable : this.props.companyTable,\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                {\r\n                    (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                    ? <Button color=\"primary\" onClick={this.toggle}>Details</Button> : \r\n                    <Button color=\"primary\" onClick={this.toggle}>Update</Button>\r\n                }\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    {\r\n                        (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                        ? <ModalHeader toggle={this.toggle}>Details</ModalHeader> : \r\n                        <ModalHeader toggle={this.toggle}>Update</ModalHeader>\r\n                    }\r\n                    <ModalBody>\r\n                        <table className=\"w-100\">\r\n                            <tbody>\r\n                            {\r\n                                this.state.table.map((row) => {\r\n                                    const keys = Object.keys(this.state.details);\r\n                                    const updates = keys.splice(13, 2*(this.state.details.n_updates-1)).concat(keys.splice(-3, 1), keys.splice(-1, 1));\r\n                                    return (\r\n                                        <tr key={row.index}>\r\n                                            <td>{row.Header}</td>\r\n                                            <td>{(row.accessor !== 'updates') \r\n                                                ? this.state.details[row.accessor]\r\n                                                : <ListGroup>\r\n                                                        {updates.map((update, index) => {\r\n                                                            return (\r\n                                                                <ListGroupItem \r\n                                                                    className={\"border-0 p-0\"} \r\n                                                                    key={update}>\r\n                                                                        {((index%2) ? \"- \" : \"\") + this.state.details[update]}\r\n                                                                </ListGroupItem>\r\n                                                            );\r\n                                                        })}\r\n                                                  </ListGroup>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \r\n                            ? \"\" : \r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Row form>\r\n                                    <Col md={8}>\r\n                                        <FormGroup>\r\n                                            <Input \r\n                                                type=\"text\" \r\n                                                name=\"value\" \r\n                                                placeholder=\"Add Update\" \r\n                                                value={this.state.value} \r\n                                                onChange={this.handleChange} \r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Button className=\"float-left\">\r\n                                            Add Update\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <Card>\r\n                                            <CardHeader>\r\n                                                <h6>Add Reminder through Google Calendar</h6>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <FormGroup>\r\n                                                    <Input \r\n                                                        type=\"text\" \r\n                                                        name=\"gc_title\" \r\n                                                        placeholder=\"Event Summary*\" \r\n                                                        value={this.state.gc_title} \r\n                                                        onChange={this.handleChange} \r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Input \r\n                                                        type=\"textarea\" \r\n                                                        name=\"gc_body\" \r\n                                                        placeholder=\"Event Details\" \r\n                                                        value={this.state.gc_body} \r\n                                                        onChange={this.handleChange} \r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label>Event Date*</Label>\r\n                                                    <Input \r\n                                                        type=\"date\" \r\n                                                        name=\"gc_date\" \r\n                                                        placeholder=\"Event date\" \r\n                                                        value={this.state.gc_date}\r\n                                                        onChange={this.handleChange} \r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Label>Event Time*</Label>\r\n                                                    <Input \r\n                                                        type=\"time\" \r\n                                                        name=\"gc_time\" \r\n                                                        placeholder=\"Event Time\" \r\n                                                        value={this.state.gc_time}\r\n                                                        onChange={this.handleChange} \r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <Button onClick={this.handleClick}>\r\n                                                    Add Event to Google Calendar\r\n                                                </Button>\r\n                                                <div className=\"mt-3\">{this.state.event_message}</div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    \r\n                                    \r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alumniTable: state.alumniDetailTable,\r\n        companyTable: state.companyDetailTable\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup, Label\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { getDetails, getData, editDetails } from '../../services'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nclass DetailModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitState();\r\n    }\r\n\r\n    getInitState() {\r\n        const initState = {\r\n            modal: false,\r\n            details: {\r\n                company_name: '',\r\n                name: '',\r\n                contact_name: '',\r\n                mobile: '',\r\n                email: '',\r\n                linkedin: '',\r\n                addr: '',\r\n                post: '',\r\n                remarks: '',\r\n            }\r\n        };\r\n        return initState;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            details: {\r\n                ...this.state.details,\r\n                [e.target.name]: e.target.value\r\n            }})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const temp = {\r\n            id: this.props.data.id,\r\n            member_id: this.state.details.member_id,\r\n            type: this.props.type,\r\n            mobile: this.state.details.mobile,\r\n            email: this.state.details.email,\r\n            linkedin: (this.state.details.linkedin) ? this.state.details.linkedin : '',\r\n            addr: this.state.details.addr,\r\n            post: (this.state.details.post) ? this.state.details.post : '',\r\n            remarks: this.state.details.remarks\r\n        };\r\n        const response = await editDetails(temp);\r\n        const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n        (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\r\n        alert(response.data);\r\n        this.toggle();\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    toggle = async () => {\r\n        if (!this.state.modal) {\r\n            const temp = {\r\n                id: this.props.data.id,\r\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\r\n            };\r\n            const details = await getDetails(temp);\r\n            this.setState({\r\n                modal: true,\r\n                details: details.data\r\n            });\r\n        }\r\n        else this.setState(this.getInitState());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                <Button onClick={this.toggle}>Edit</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup><Label>Name</Label><Input type=\"text\" disabled name=\"name\" value={(this.props.type === \"company\") ? this.state.details.company_name : this.state.details.name} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"company\") ?\r\n                                    <FormGroup><Label>Contact Name</Label><Input disabled type=\"text\" placeholder=\"Contact Person name\" name=\"contact_name\" value={this.state.details.contact_name} /></FormGroup>\r\n                                     : \"\"\r\n                            }\r\n                            <FormGroup><Label>Phone No</Label><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.details.mobile} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Label>Email</Label><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.details.email} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"alumni\") ?\r\n                                    <FormGroup><Label>LinkedIn</Label><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.details.linkedin} onChange={this.handleChange} /></FormGroup>\r\n                                    : <FormGroup><Label>Post</Label><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.details.post} onChange={this.handleChange} /></FormGroup>\r\n                            }\r\n                            <FormGroup><Label>Address</Label><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.details.addr} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Label>Remarks</Label><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.details.remarks} onChange={this.handleChange} /></FormGroup>\r\n                            <Button>Save</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alumniTable: state.alumniDetailTable,\r\n        companyTable: state.companyDetailTable\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Form, Input, FormGroup\r\n} from 'reactstrap';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { newAlumni, newCompany, getData } from '../../services'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\n\r\nclass AddContact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitState();\r\n    }\r\n\r\n    getInitState() {\r\n        const initState = {\r\n            modal: false,\r\n            formData: {\r\n                name: '',\r\n                contact_name: '',\r\n                mobile: '',\r\n                email: '',\r\n                post: '',\r\n                linkedin: '',\r\n                addr: '',\r\n                remarks: '',\r\n                update: ''\r\n            }\r\n        };\r\n        return initState;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.formData.name && !this.state.formData.mobile && !this.state.formData.update ) {\r\n            alert(\"Fill all fields\");\r\n        }\r\n        else {\r\n            if (this.props.type === \"alumni\") {\r\n                \r\n                if(this.state.formData.mobile!=\"\")\r\n               { \r\n                const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    name: this.state.formData.name,\r\n                    mobile: this.state.formData.mobile,\r\n                    email: this.state.formData.email,\r\n                    linkedin: this.state.formData.linkedin,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks,\r\n                    update: this.state.formData.update\r\n                };\r\n                const response = await newAlumni(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addAlumni(Data.data);\r\n                console.log(response);\r\n                alert(response.data);\r\n            }\r\n            else\r\n            { \r\n                const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    name: this.state.formData.name,\r\n                    mobile: \" \",\r\n                    email: this.state.formData.email,\r\n                    linkedin: this.state.formData.linkedin,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks,\r\n                    update: this.state.formData.update\r\n                };\r\n                const response = await newAlumni(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addAlumni(Data.data);\r\n                console.log(response);\r\n                alert(response.data);\r\n            }\r\n            }\r\n            else {\r\n                if(this.state.formData.mobile!=\"\")\r\n                {const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    company_name: this.state.formData.name,\r\n                    contact_name: this.state.formData.contact_name,\r\n                    mobile: this.state.formData.mobile,\r\n                    email: this.state.formData.email,\r\n                    update: this.state.formData.update,\r\n                    post: this.state.formData.post,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks\r\n                };\r\n              // console.log(temp);\r\n                //alert(this.state.formData.mobile);\r\n                const response = await newCompany(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addCompany(Data.data);\r\n                console.log(response);\r\n                 if(response.code==-2)\r\n                    alert(\"Please fill all fields\");\r\n                    else\r\n               alert(response.data);\r\n            }\r\n            else\r\n            {\r\n                const temp = {\r\n                    member_id: localStorage.getItem('id'),\r\n                    company_name: this.state.formData.name,\r\n                    contact_name: this.state.formData.contact_name,\r\n                    mobile: \" \",\r\n                    email: this.state.formData.email,\r\n                    update: this.state.formData.update,\r\n                    post: this.state.formData.post,\r\n                    addr: this.state.formData.addr,\r\n                    remarks: this.state.formData.remarks\r\n                };\r\n                //alert(this.state.formData.mobile);\r\n                const response = await newCompany(temp);\r\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\r\n                this.props.addCompany(Data.data);\r\n                console.log(response);\r\n                if(response.code==-2)\r\n                    alert(\"Please fill all fields\");\r\n                    else\r\n\r\n                alert(response.data);\r\n            }\r\n                \r\n            }\r\n            this.toggle();\r\n        }\r\n        this.setState(this.getInitState());\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"d-inline-block mb-2 mr-2\">\r\n                <Button color=\"primary\" onClick={this.toggle}>Add Contact</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle}>Add {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)} Contact</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup><Input type=\"text\" placeholder={(this.props.type === \"alumni\") ?\"Name*\" : \"Comapny Name*\"} name=\"name\" value={this.state.formData.name} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"company\") ?\r\n                                    <FormGroup><Input type=\"text\" placeholder=\"Contact Person name*\" name=\"contact_name\" value={this.state.formData.contact_name} onChange={this.handleChange} /></FormGroup>\r\n                                     : \"\"\r\n                            }\r\n                            <FormGroup><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.formData.mobile} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.formData.email} onChange={this.handleChange} /></FormGroup>\r\n                            {\r\n                                (this.props.type === \"alumni\") ?\r\n                                    <FormGroup><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.formData.linkedin} onChange={this.handleChange} /></FormGroup>\r\n                                    : <FormGroup><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.formData.post} onChange={this.handleChange} /></FormGroup>\r\n                            }\r\n                            <FormGroup><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.formData.addr} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"text\" placeholder=\"First Update*\" name=\"update\" value={this.state.formData.update} onChange={this.handleChange} /></FormGroup>\r\n                            <FormGroup><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.formData.remarks} onChange={this.handleChange} /></FormGroup>\r\n                            <Button>Add Contact</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addAlumni: addAlumni,\r\n        addCompany: addCompany\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AddContact);\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'reactstrap'\r\nimport ReactTable from 'react-table'\r\nimport 'react-table/react-table.css'\r\nimport DetailModal from './Modal'\r\nimport EditModal from './editModal'\r\nimport AddContact from './addContact'\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoadingIndicator = props => {\r\n\tconst { promiseInProgress } = usePromiseTracker();\r\n\r\n  return promiseInProgress && <div className=\"loader t-container text-center\">\r\n  \t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} />\r\n    </div>\r\n}  \r\n\r\nfunction filterCaseInsensitive(filter, row) {\r\n    const id = filter.pivotId || filter.id;\r\n    return (\r\n        row[id] !== undefined ?\r\n            String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\r\n        :\r\n            true\r\n    );\r\n}\r\n\r\nclass Table extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tctm: {},\r\n\t\t\ttableData: [],\r\n\t\t\tcolumns_ctm: [{ \r\n\t\t\t\t\tHeader: 'Name',\r\n\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t},{\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Email',\r\n\t\t\t\t\taccessor: 'email'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<Button color=\"primary\" onClick={() => this.setCTM(props.original)}>View</Button>)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\tsetCTM = (ctm_data) => {\r\n\t\tthis.setState({ctm: ctm_data});\r\n\t\tthis.props.changeTable(\"ctmAlumni\", ctm_data.id);\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps) {\r\n\t\treturn {\r\n\t\t\ttableData: (nextProps.type === 'alumni' || nextProps.type === 'ctmAlumni') \r\n\t\t\t\t\t\t\t\t ? nextProps.alumni \r\n\t\t\t\t\t\t\t\t : (nextProps.type === \"ctm\") \r\n\t\t\t\t\t\t\t\t ? nextProps.ctm \r\n\t\t\t\t\t\t\t\t : nextProps.company,\r\n\t\t\tcolumns_alumni: [{ \r\n\t\t\t\t\tHeader: 'Name',\r\n\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update',\r\n\t\t\t\t\taccessor: 'last_update'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update Date',\r\n\t\t\t\t\taccessor: 'updated_at'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 80,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\tshow: (nextProps.type === \"alumni\"),\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tcolumns_company: [{ \r\n\t\t\t\t\tHeader: 'Company Name',\r\n\t\t\t\t\taccessor: 'company_name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t},{ \r\n\t\t\t\t\tHeader: 'Contact Name',\r\n\t\t\t\t\taccessor: 'contact_name',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Phone Number',\r\n\t\t\t\t\taccessor: 'mobile',\r\n\t\t\t\t\tfilterable: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update',\r\n\t\t\t\t\taccessor: 'last_update'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tHeader: 'Last Update Date',\r\n\t\t\t\t\taccessor: 'updated_at'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 80,\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\r\n\t\t\t\t}, {\r\n\t\t\t\t\tfilterable: false,\r\n\t\t\t\t\twidth: 60,\r\n\t\t\t\t\tshow: (nextProps.type === \"company\"),\r\n\t\t\t\t\tCell: props => \r\n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet otherType = (this.props.type === \"ctmAlumni\") ? \"ctmCompany\" : (this.props.type === \"ctmCompany\") ? \"ctmAlumni\" : \"\";\r\n\t\treturn (\r\n\t\t\t(this.props.view === \"ctm\") ?\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t<div className=\"float-right\"><AddContact type={this.props.type}/></div>\r\n\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Contacts\"}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"t-container overflow-hidden\">\r\n\t\t\t\t\t<ReactTable \r\n\t\t\t\t\t\tdata = {this.state.tableData}\r\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\r\n\t\t\t\t\t\tcolumns = {(this.props.type === 'alumni') ? this.state.columns_alumni : this.state.columns_company}\r\n\t\t\t\t\t\tdefaultPageSize = {100}\r\n\t\t\t\t\t\tsortable = {false}\r\n\t\t\t\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment> :\r\n\t\t\t<Fragment>\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") ? \r\n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t\t<Button className=\"float-right mr-4\" onClick={() => this.props.changeTable(otherType, this.state.ctm.id)}>View {otherType} updates</Button>\r\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Updates (\"+ this.state.ctm.name +\")\"}</h2>\r\n\t\t\t\t\t</div> :\r\n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\r\n\t\t\t\t\t\t{(this.props.type === \"ctm\") ? \"\" : <div className=\"float-right\"><AddContact type={this.props.type}/></div>}\r\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}</h2>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"t-container overflow-hidden\">\r\n\t\t\t\t\t<ReactTable \r\n\t\t\t\t\t\tdata = {this.state.tableData}\r\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\r\n\t\t\t\t\t\tcolumns = {\r\n\t\t\t\t\t\t\t(this.props.type === 'alumni' || this.props.type === 'ctmAlumni') \r\n\t\t\t\t\t\t\t? this.state.columns_alumni \r\n\t\t\t\t\t\t\t: (this.props.type === 'company' || this.props.type === 'ctmCompany') \r\n\t\t\t\t\t\t\t? this.state.columns_company\r\n\t\t\t\t\t\t\t: this.state.columns_ctm\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefaultPageSize = {100}\r\n\t\t\t\t\t\tsortable = {false}\r\n\t\t\t\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\talumni: state.alumni,\r\n\t\tcompany: state.company,\r\n\t\tctm: state.ctm\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);","import React, {Fragment} from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport sflogo from '../../assets/sflogo.png'\r\nimport {\r\n    Collapse, Navbar, NavbarToggler, NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap'\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    className={\"app-header header-shadow\"}\r\n                    transitionName=\"HeaderAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={1500}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                        <div className=\"w-100\">\r\n                            <Navbar light expand=\"md\">\r\n                                <NavbarBrand className=\"mr-auto\">\r\n                                    <img className=\"float-left\" src={sflogo} alt=\"SF-logo\" width=\"40px\"/>\r\n                                    <h2 className=\"ml-2 float-left\">SF diary</h2>\r\n                                </NavbarBrand>\r\n                                <NavbarToggler onClick={this.toggle} />\r\n                                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                                        <Nav className=\"ml-auto\" navbar>\r\n                                            {\r\n                                                (this.props.type === 'cth')\r\n                                                ? <NavItem onClick={() => this.props.changeTable('ctm')}><NavLink>CTM</NavLink></NavItem>\r\n                                                : \"\"\r\n                                            } \r\n                                            <NavItem onClick={() => this.props.changeTable('alumni')}><NavLink>Alumni</NavLink></NavItem>\r\n                                            <NavItem onClick={() => this.props.changeTable('company')}><NavLink>Company</NavLink></NavItem>\r\n                                            <NavItem onClick={() => this.props.logout()}><NavLink>Log Out</NavLink></NavItem>\r\n                                        </Nav>\r\n                                    </Collapse>\r\n                            </Navbar>\r\n                        </div>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component, Fragment } from 'react'\r\nimport auth from '../../Config/Auth'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { addAlumni, addCompany } from '../../Actions'\r\nimport Table from '../utilities/Table'\r\nimport { getData } from '../../services'\r\nimport Header from '../utilities/header'\r\n\r\nclass CTM extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tautoLogout: false,\r\n\t\t\ttable: 'alumni',\r\n\t\t\tallData: false\r\n\t\t}\r\n\t\tthis.events = [\r\n      \"load\",\r\n      \"mousemove\",\r\n      \"mousedown\",\r\n      \"click\",\r\n      \"scroll\",\r\n      \"keypress\"\r\n    ];\r\n\r\n    for (var i in this.events) {\r\n      window.addEventListener(this.events[i], this.resetTimeout);\r\n    }\r\n\r\n\t\tthis.setTimeout();\r\n\t}\r\n\r\n\tclearTimeout() {\r\n    if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\r\n  }\r\n\r\n\tsetTimeout = () => {\r\n    this.logoutTimeout = setTimeout(this.autoLogout, 600 * 1000);\r\n  }\r\n\r\n  autoLogout = () => {\r\n  \tthis.setState({ autoLogout: true });\r\n  \tthis.handleLogout();\r\n  }\r\n\r\n  resetTimeout = () => {\r\n  \tthis.clearTimeout();\r\n  \tthis.setTimeout();\r\n  }\r\n\r\n  destroy = () => {\r\n    this.clearTimeout();\r\n\r\n    for (var i in this.events) {\r\n      window.removeEventListener(this.events[i], this.resetTimeout);\r\n    }\r\n  }\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (auth.isAuthenticated() !== 'ctm') {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\telse await this.getAllData();\r\n\t}\r\n\r\n\tgetAllData = async () => {\r\n\t\tconst temp = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'alumni'\r\n\t\t};\r\n\t\tconst alumniData = await getData(temp);\r\n\t\tthis.props.addAlumni(alumniData.data);\r\n\t\t\r\n\t\tconst temp2 = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'company'\r\n\t\t};\r\n\t\tconst companyData = await getData(temp2);\r\n\t\tthis.props.addCompany(companyData.data);\r\n\t}\r\n\r\n\thandleLogout = () => {\r\n\t\tif (this.state.autoLogout)\r\n\t\t\talert(\"You have been logged out due to inactivity\");\r\n\t\tthis.props.addAlumni([]);\r\n\t\tthis.props.addCompany([]);\r\n\t\tthis.destroy();\r\n\t\tauth.logout(() => {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\tchangeTable = async (tableName) => {\r\n\t\tawait this.getAllData();\r\n\t\tthis.setState({ table: tableName });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n        \t<Header changeTable={this.changeTable} type=\"ctm\" logout={this.handleLogout}/>\r\n\t\t\t\t\t<Table view=\"ctm\" type={this.state.table} id={localStorage.getItem('id')}/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuserDetails: state.userDetails\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddAlumni: addAlumni,\r\n\t\taddCompany: addCompany\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(CTM);","import React, { Component, Fragment } from 'react'\r\nimport auth from '../../Config/Auth'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { addAlumni, addCompany, addCTM } from '../../Actions'\r\nimport Table from '../utilities/Table'\r\nimport { getData, getCTMS } from '../../services'\r\nimport Header from '../utilities/header'\r\n\r\nclass CTH extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tautoLogout: false,\r\n\t\t\ttable: 'alumni'\r\n\t\t}\r\n\t\tthis.events = [\r\n      \"load\",\r\n      \"mousemove\",\r\n      \"mousedown\",\r\n      \"click\",\r\n      \"scroll\",\r\n      \"keypress\"\r\n    ];\r\n\r\n    for (var i in this.events) {\r\n      window.addEventListener(this.events[i], this.resetTimeout);\r\n    }\r\n\r\n\t\tthis.setTimeout();\r\n\t}\r\n\r\n\tclearTimeout() {\r\n    if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\r\n  }\r\n\r\n\tsetTimeout = () => {\r\n    this.logoutTimeout = setTimeout(this.autoLogout, 600 * 1000);\r\n  }\r\n\r\n  autoLogout = () => {\r\n  \tthis.setState({ autoLogout: true });\r\n  \tthis.handleLogout();\r\n  }\r\n\r\n  resetTimeout = () => {\r\n  \tthis.clearTimeout();\r\n  \tthis.setTimeout();\r\n  }\r\n\r\n  destroy = () => {\r\n    this.clearTimeout();\r\n\r\n    for (var i in this.events) {\r\n      window.removeEventListener(this.events[i], this.resetTimeout);\r\n    }\r\n  }\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (auth.isAuthenticated() !== 'cth') {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\telse await this.getAllData(localStorage.getItem('id'));\r\n\t}\r\n\r\n\tgetAllData = async (id) => {\r\n\t\tconst temp = {\r\n\t\t\tid: id,\r\n\t\t\ttype: 'alumni'\r\n\t\t};\r\n\t\tconst alumniData = await getData(temp);\r\n\t\tthis.props.addAlumni(alumniData.data);\r\n\t\t\r\n\t\tconst temp2 = {\r\n\t\t\tid: id,\r\n\t\t\ttype: 'company'\r\n\t\t};\r\n\t\tconst companyData = await getData(temp2);\r\n\t\tthis.props.addCompany(companyData.data);\r\n\r\n\t\tconst temp3 = {\r\n\t\t\tid: localStorage.getItem('id'),\r\n\t\t\ttype: 'cth'\r\n\t\t};\r\n\t\tconst ctmData = await getCTMS(temp3);\r\n\t\tthis.props.addCTM(ctmData.data);\r\n\t}\r\n\r\n\thandleLogout = () => {\r\n\t\tif (this.state.autoLogout)\r\n\t\t\talert(\"You have been logged out due to inactivity\");\r\n\t\tthis.props.addAlumni([]);\r\n\t\tthis.props.addCompany([]);\r\n\t\tthis.props.addCTM([]);\r\n\t\tthis.destroy();\r\n\t\tauth.logout(() => {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\tchangeTable = async (tableName, id=localStorage.getItem('id')) => {\r\n\t\tawait this.getAllData(id);\r\n\t\tthis.setState({ table: tableName })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n        \t<Header changeTable={this.changeTable} type=\"cth\" logout={this.handleLogout}/>\r\n        \t<Table view=\"cth\" type={this.state.table} changeTable={this.changeTable}/>\r\n\t\t\t\t\t{/*(this.state.table === 'ctm') ? <CTMTable /> : <Table type={this.state.table} />*/}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuserDetails: state.userDetails\r\n\t}\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n\treturn bindActionCreators({\r\n\t\taddAlumni: addAlumni,\r\n\t\taddCompany: addCompany,\r\n\t\taddCTM: addCTM\r\n\t}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(CTH);","import React from 'react';\r\nimport './Stylesheets/base.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Landing from './Components/Landing'\r\nimport {PrivateRoute} from './utility/PrivateRoute'\r\nimport CTM from './Components/ctm'\r\nimport CTH from './Components/cth'\r\n\r\nfunction App() {\r\n  return (\r\n  \t<BrowserRouter>\r\n  \t\t<Switch>\r\n\t\t    <Route exact path = '/' component = {Landing} />\r\n\t\t    <PrivateRoute path = '/ctm' component = {CTM} />\r\n\t\t    <PrivateRoute path = '/cth' component = {CTH} />\r\n\t\t    <Route component = {Landing} />\r\n\t    </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {Fragment} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nclass Footer extends React.Component {\r\n\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app-footer newFooter\">\r\n                    <div className=\"app-footer__inner\">\r\n                        <div className=\"app-footer-right\">\r\n                            <span className=\"d-inline-block mb-2 mr-2\">\r\n                                <Button color=\"link\" onClick={this.toggle}>Credits</Button>\r\n                                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                                    <ModalHeader toggle={this.toggle}>Credits</ModalHeader>\r\n                                    <ModalBody>\r\n                                        Kashish Goyal\r\n                                    </ModalBody>\r\n                                    <ModalFooter>\r\n                                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\r\n                                    </ModalFooter>\r\n                                </Modal>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )}\r\n}\r\n\r\nexport default Footer;","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_ALUMNI_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_COMPANY_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_CTM_DATA':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ADD_USER_DETAILS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [\r\n\t{\r\n    Header: 'Name',\r\n    accessor: 'name',\r\n\tindex: 1\r\n    },\r\n\t{\r\n    Header: 'Phone No',\r\n    accessor: 'mobile',\r\n\tindex: 2\r\n    },\r\n\t{\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n\tindex: 3\r\n    },\r\n\t{\r\n    Header: 'LinkedIn Link',\r\n    accessor: 'linkedin',\r\n\tindex: 4\r\n    },\r\n\t{\r\n    Header: 'Address',\r\n    accessor: 'addr',\r\n\tindex: 5\r\n    },\r\n\t{\r\n    Header: 'Remarks',\r\n    accessor: 'remarks',\r\n\tindex: 6\r\n    },\r\n\t{\r\n    Header: 'Updates',\r\n    accessor: 'updates',\r\n\tindex: 7\r\n    }\r\n];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'ALUMNI_DETAIL_TABLE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [\r\n\t{\r\n    Header: 'Compay Name',\r\n    accessor: 'company_name',\r\n\tindex: 1\r\n    },\r\n    {\r\n    Header: 'Contact Person Name',\r\n    accessor: 'contact_name',\r\n    index: 2\r\n    },\r\n\t{\r\n    Header: 'Phone No',\r\n    accessor: 'mobile',\r\n\tindex: 3\r\n    },\r\n\t{\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n\tindex: 4\r\n    },\r\n\t{\r\n    Header: 'Post of Contact',\r\n    accessor: 'post',\r\n\tindex: 5\r\n    },\r\n\t{\r\n    Header: 'Address',\r\n    accessor: 'addr',\r\n\tindex: 6\r\n    },\r\n\t{\r\n    Header: 'Remarks',\r\n    accessor: 'remarks',\r\n\tindex: 7\r\n    },\r\n\t{\r\n    Header: 'Updates',\r\n    accessor: 'updates',\r\n\tindex: 8\r\n    }\r\n];\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case 'COMPANY_DETAIL_TABLE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alumniData from './alumniData'\r\nimport companyData from './companyData'\r\nimport ctmData from './ctmData'\r\nimport userDetails from './userDetails'\r\nimport alumniDetailTable from './alumniDetailTable'\r\nimport companyDetailTable from './companyDetailTable'\r\n\r\nconst reducers = combineReducers({\r\n\talumni: alumniData,\r\n\tcompany: companyData,\r\n\tuserDetails: userDetails,\r\n\talumniDetailTable: alumniDetailTable,\r\n\tcompanyDetailTable: companyDetailTable,\r\n\tctm: ctmData\r\n});\r\n\r\nexport default reducers;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Footer from './Components/utilities/footer'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport Reducers from \"./Reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport promise from 'redux-promise-middleware'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nexport const store = createStore(\r\n  Reducers,\r\n  applyMiddleware(promise)\r\n);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t\t<Footer />\r\n\t</Provider>, \r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/sflogo.98f322d5.png\";"],"sourceRoot":""}