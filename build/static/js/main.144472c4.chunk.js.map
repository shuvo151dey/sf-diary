{"version":3,"sources":["Config/Auth.js","Actions/index.js","Config/apiConfig.js","services/index.js","Components/Landing.js","utility/PrivateRoute.js","Components/utilities/Modal.js","Components/utilities/editModal.js","Components/utilities/addContact.js","Components/utilities/Table.js","Components/utilities/header.js","Components/ctm/index.js","Components/cth/index.js","App.js","Components/utilities/footer.js","Reducers/alumniData.js","Reducers/companyData.js","Reducers/ctmData.js","Reducers/userDetails.js","Reducers/alumniDetailTable.js","Reducers/companyDetailTable.js","Reducers/index.js","serviceWorker.js","index.js","assets/sflogo.png"],"names":["this","ctm_authenticated","cth_authenticated","type","callback","localStorage","setItem","removeItem","getItem","addAlumni","data","payload","addCompany","addCTM","addUser","HTTP","axios","create","baseURL","login","trackPromise","post","JSON","stringify","headers","then","res","catch","err","console","log","getData","getDetails","newAlumni","newCompany","Landing","state","email","password","showForm","handleChange","e","setState","target","name","value","toggleForm","handleSubmit","a","preventDefault","userDetails","por","props","id","auth","history","push","alert","component","transitionName","className","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","Col","xs","Row","src","sflogo","alt","width","Card","CardBody","CardTitle","Form","onSubmit","Input","placeholder","onChange","Button","color","Component","connect","dispatch","bindActionCreators","PrivateRoute","rest","render","isAuthenticated","to","pathname","from","location","gapi","window","DetailModal","handleClick","load","client","init","apiKey","gCalendar","API_KEY","clientId","CLIENT_ID","discoveryDocs","DISCOVERY_DOCS","scope","SCOPES","auth2","getAuthInstance","signIn","endtime","gc_time","h","Number","slice","event","gc_title","gc_body","gc_date","calendar","events","insert","execute","open","htmlLink","er","error","temp","member_id","details","update","n_updates","Data","toggle","modal","table","alumniTable","companyTable","onClick","Modal","isOpen","ModalHeader","ModalBody","map","row","keys","Object","updates","splice","concat","key","index","Header","accessor","ListGroup","ListGroupItem","form","md","FormGroup","CardHeader","Label","ModalFooter","React","alumniDetailTable","companyDetailTable","mobile","linkedin","addr","remarks","response","getInitState","company_name","contact_name","disabled","AddContact","formData","code","charAt","toUpperCase","LoadingIndicator","usePromiseTracker","promiseInProgress","height","filterCaseInsensitive","filter","pivotId","undefined","String","toLowerCase","startsWith","Table","setCTM","ctm_data","ctm","changeTable","tableData","columns_ctm","filterable","Cell","original","otherType","view","LoadingComponent","columns","columns_alumni","columns_company","defaultPageSize","sortable","defaultFilterMethod","nextProps","alumni","company","show","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","logout","CTM","i","setTimeout","logoutTimeout","autoLogout","handleLogout","resetTimeout","clearTimeout","destroy","removeEventListener","getAllData","alumniData","temp2","companyData","tableName","allData","addEventListener","CTH","temp3","ctmData","App","exact","path","Footer","initialState","reducers","combineReducers","action","Boolean","hostname","match","store","createStore","Reducers","applyMiddleware","promise","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"oTA0Be,M,WAzBd,aAAe,oBACdA,KAAKC,mBAAoB,EACzBD,KAAKE,mBAAoB,E,yCAG1B,SAAMC,EAAMC,GAEXC,aAAaC,QAAQ,cAAeH,GACpCC,M,oBAGD,SAAOA,GAGNC,aAAaC,QAAQ,eAAe,GACpCD,aAAaE,WAAW,MACxBH,M,6BAGD,WAEC,OAAOC,aAAaG,QAAQ,mB,MCtBjBC,EAAY,SAACC,GACtB,MAAO,CACHP,KAAM,kBACNQ,QAASD,IAIJE,EAAa,SAACF,GACvB,MAAO,CACHP,KAAM,mBACNQ,QAASD,IAIJG,EAAS,SAACH,GACnB,MAAO,CACHP,KAAM,eACNQ,QAASD,IAIJI,EAAU,SAACJ,GACpB,MAAO,CACHP,KAAM,mBACNQ,QAASD,I,QCtBJK,E,OAAOC,EAAMC,OAAO,CAChCC,QAAS,kC,QCAGC,EAAQ,SAACT,GAAD,OACpBU,uBAAaL,EAAKM,KAAK,gBAAiBC,KAAKC,UAAUb,GAAO,CAC7Dc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,UAGIG,EAAU,SAACrB,GAAD,OACtBU,uBAAaL,EAAKM,KAAK,kBAAmBC,KAAKC,UAAUb,GAAO,CAC/Dc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,UAGII,EAAa,SAACtB,GAAD,OACzBU,uBAAaL,EAAKM,KAAK,qBAAsBC,KAAKC,UAAUb,GAAO,CAClEc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,UAeIK,EAAY,SAACvB,GAAD,OACxBU,uBAAaL,EAAKM,KAAK,oBAAqBC,KAAKC,UAAUb,GAAO,CACjEc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,UAGIM,EAAa,SAACxB,GAAD,OACzBU,uBAAaL,EAAKM,KAAK,qBAAsBC,KAAKC,UAAUb,GAAO,CAClEc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,U,kGCvDHO,E,4MACLC,MAAQ,CACP1B,KAAM,CACL2B,MAAO,GACPC,SAAU,IAEXC,UAAU,G,EAGXC,aAAe,SAACC,GACf,EAAKC,SAAS,CACbhC,KAAK,2BACD,EAAK0B,MAAM1B,MADX,kBAEF+B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,W,EAK7BC,WAAa,WACZ,EAAKJ,SAAS,CAAEH,UAAW,EAAKH,MAAMG,Y,EAGvCQ,a,uCAAe,WAAON,GAAP,eAAAO,EAAA,6DACdP,EAAEQ,iBADY,SAEY9B,EAAM,EAAKiB,MAAM1B,MAF7B,OAGe,SADvBwC,EAFQ,QAGExC,KAAKyC,KAA0C,QAAzBD,EAAYxC,KAAKyC,KACtD,EAAKC,MAAMtC,QAAQoC,EAAYxC,MAC/BL,aAAaC,QAAQ,KAAM4C,EAAYxC,KAAK2C,IAC5CC,EAAKnC,MAAM+B,EAAYxC,KAAKyC,KAAK,WAChC,EAAKC,MAAMG,QAAQC,KAAK,IAAMN,EAAYxC,KAAKyC,SAIhDM,MAAMP,EAAYxC,MAXL,2C,kGAef,WACC,OACC,kBAAC,WAAD,KACC,kBAAC,IAAD,CACMgD,UAAU,MACVC,eAAe,gBACfC,UAAa,OACbC,kBAAkB,EAClBC,wBAAyB,EACzBC,iBAAiB,EACjBC,iBAAiB,GACtB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP,kBAACC,EAAA,EAAD,CAAKP,UAAU,QACd,kBAACK,EAAA,EAAD,CAAKL,UAAW,+CACf,yBAAKQ,IAAKC,IAAQC,IAAI,UAAUC,MAAM,WACtC,wBAAIX,UAAU,SAAd,aAED,kBAACK,EAAA,EAAD,CAAKL,UAAU,qBACd,kBAACY,EAAA,EAAD,CAAMZ,UAAU,kBACf,kBAACa,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWd,UAAU,qBAArB,SACA,kBAACe,EAAA,EAAD,CAAMC,SAAU5E,KAAK+C,cACpB,kBAAC8B,EAAA,EAAD,CAAO1E,KAAK,QAAQyC,KAAK,QAAQkC,YAAY,QAAQjC,MAAO7C,KAAKoC,MAAM1B,KAAK2B,MAAO0C,SAAU/E,KAAKwC,eAAe,6BACjH,kBAACqC,EAAA,EAAD,CAAO1E,KAAK,WAAWyC,KAAK,WAAWkC,YAAY,WAAWjC,MAAO7C,KAAKoC,MAAM1B,KAAK4B,SAAUyC,SAAU/E,KAAKwC,eAC9G,kBAACwC,EAAA,EAAD,CAAQC,MAAM,UAAUrB,UAAU,QAAlC,qB,GA7DWsB,aAsFPC,eAZS,SAAC/C,GACxB,MAAO,MAKqB,SAACgD,GAC7B,OAAOC,YAAmB,CACzBvE,QAASA,GACPsE,KAGWD,CAA+ChD,G,wBCnGjDmD,EAAe,SAAC,GAAuC,IAA1BJ,EAAyB,EAApCxB,UAAyB6B,EAAW,iBAClE,OACC,kBAAC,IAAD,iBACKA,EADL,CAECC,OAAU,SAACpC,GAAD,OACRE,EAAKmC,kBACL,kBAACP,EAAc9B,GAEf,kBAAC,IAAD,CAAUsC,GAAM,CACfC,SAAU,IACVvD,MAAO,CAAEwD,KAAMxC,EAAMyC,kB,iHCFvBC,GAAOC,OAAOD,KACZE,G,kDACF,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAYV6C,YAAc,WACVH,GAAKI,KAAK,gBAAgB,WACtBrE,QAAQC,IAAI,eACZgE,GAAKK,OAAOC,KAAK,CACbC,OAAQC,GAAUC,QAClBC,SAAUF,GAAUG,UACpBC,cAAeJ,GAAUK,eACzBC,MAAON,GAAUO,SAErBf,GAAKK,OAAOD,KAAK,WAAY,MAAM,WAAMrE,QAAQC,IAAI,UACrDgE,GAAKgB,MAAMC,kBAAkBC,SAC5BvF,MAAK,WACF,IAAIwF,EAAU,EAAK7E,MAAM8E,QACrBC,EAAIC,OAAOH,EAAQI,MAAM,EAAG,IAAI,EACpCJ,GAAW,IAAME,GAAGE,OAAO,GAAKJ,EAAQI,MAAM,GAC9C,IAAIC,EAAQ,CACR,QAAW,EAAKlF,MAAMmF,SACtB,YAAe,EAAKnF,MAAMoF,QAC1B,MAAS,CACL,SAAY,EAAKpF,MAAMqF,QAAQ,IAAI,EAAKrF,MAAM8E,QAAQ,MACtD,SAAY,gBAEhB,IAAO,CACH,SAAY,EAAK9E,MAAMqF,QAAQ,IAAIR,EAAQ,MAC3C,SAAY,gBAEhB,UAAa,CACT,YAAc,EACd,UAAa,CACT,CAAC,OAAU,QAAS,QAAW,KAC/B,CAAC,OAAU,QAAS,QAAW,OAI7BnB,GAAKK,OAAOuB,SAASC,OAAOC,OAAO,CAC7C,WAAc,UACd,SAAYN,IAGRO,SAAQ,SAASP,GACrBvB,OAAO+B,KAAKR,EAAMS,gBAEvBpG,OAAM,SAACqG,GACNnG,QAAQC,IAAIkG,EAAGC,cAxDR,EA6DnBzF,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SA9D1B,EAiEnBE,aAjEmB,uCAiEJ,WAAON,GAAP,iBAAAO,EAAA,yDACXP,EAAEQ,iBACG,EAAKb,MAAMS,MAFL,gBAGPY,MAAM,kBAHC,8BAMDyE,EAAO,CACT7E,GAAI,EAAKD,MAAMC,GACf8E,UAAW,EAAK/F,MAAMgG,QAAQD,UAC9BE,OAAQ,EAAKjG,MAAMS,MACnB1C,KAAM,EAAKiD,MAAMjD,KACjBmI,UAAW,EAAKlG,MAAMgG,QAAQE,WAX3B,SHxCO5H,EGqDmBwH,EHpD5C9G,uBAAaL,EAAKM,KAAK,oBAAqBC,KAAKC,UAAUb,GAAO,CACjEc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,SG+BU,qBAcPC,QAAQC,IAAIoG,GAdL,UAeYnG,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OAftE,QAeDoI,EAfC,OAgBc,WAApB,EAAKnF,MAAMjD,KAAqB,EAAKiD,MAAM3C,UAAU8H,EAAK7H,MAAQ,EAAK0C,MAAMxC,WAAW2H,EAAK7H,MAC9F,EAAK8H,SAjBE,QAmBX,EAAK9F,SAAS,CAACG,MAAO,KAnBX,kCHxCM,IAACnC,IGwCP,OAjEI,wDAuFnB8H,OAvFmB,sBAuFV,8BAAAxF,EAAA,yDACA,EAAKZ,MAAMqG,MADX,uBAEKP,EAAO,CACT7E,GAAI,EAAKD,MAAMC,GACflD,KAA2B,WAApB,EAAKiD,MAAMjD,MAAyC,cAApB,EAAKiD,MAAMjD,KAAwB,SAAW,WAJxF,SAMqB6B,EAAWkG,GANhC,OAMKE,EANL,OAOD,EAAK1F,SAAS,CACV0F,QAASA,EAAQ1H,OARpB,OAWL,EAAKgC,SAAS,CACVgG,MAA4B,WAApB,EAAKtF,MAAMjD,MAAyC,cAApB,EAAKiD,MAAMjD,KAAwB,EAAKiD,MAAMuF,YAAc,EAAKvF,MAAMwF,aAC/GH,OAAQ,EAAKrG,MAAMqG,QAblB,2CArFL,EAAKrG,MAAQ,CACTqG,OAAO,EACP5F,MAAO,GACPuF,QAAS,GACTM,MAAO,GACPnB,SAAU,GACVC,QAAS,GACTC,QAAS,GACTP,QAAS,IAVE,E,0CAwGnB,WAAU,IAAD,OACL,OACI,0BAAMtD,UAAU,4BAEa,cAApB5D,KAAKoD,MAAMjD,MAA4C,eAApBH,KAAKoD,MAAMjD,KAC7C,kBAAC6E,EAAA,EAAD,CAAQC,MAAM,UAAU4D,QAAS7I,KAAKwI,QAAtC,WACF,kBAACxD,EAAA,EAAD,CAAQC,MAAM,UAAU4D,QAAS7I,KAAKwI,QAAtC,UAEJ,kBAACM,EAAA,EAAD,CAAOC,OAAQ/I,KAAKoC,MAAMqG,MAAOD,OAAQxI,KAAKwI,QAEjB,cAApBxI,KAAKoD,MAAMjD,MAA4C,eAApBH,KAAKoD,MAAMjD,KAC7C,kBAAC6I,EAAA,EAAD,CAAaR,OAAQxI,KAAKwI,QAA1B,WACF,kBAACQ,EAAA,EAAD,CAAaR,OAAQxI,KAAKwI,QAA1B,UAEJ,kBAACS,EAAA,EAAD,KACI,2BAAOrF,UAAU,SACb,+BAEI5D,KAAKoC,MAAMsG,MAAMQ,KAAI,SAACC,GAClB,IAAMC,EAAOC,OAAOD,KAAK,EAAKhH,MAAMgG,SAC9BkB,EAAUF,EAAKG,OAAO,GAAI,GAAG,EAAKnH,MAAMgG,QAAQE,UAAU,IAAIkB,OAAOJ,EAAKG,QAAQ,EAAG,GAAIH,EAAKG,QAAQ,EAAG,IAC/G,OACI,wBAAIE,IAAKN,EAAIO,OACT,4BAAKP,EAAIQ,QACT,4BAAuB,YAAjBR,EAAIS,SACJ,EAAKxH,MAAMgG,QAAQe,EAAIS,UACvB,kBAACC,GAAA,EAAD,KACOP,EAAQJ,KAAI,SAACb,EAAQqB,GAClB,OACI,kBAACI,GAAA,EAAD,CACIlG,UAAW,eACX6F,IAAKpB,IACEqB,EAAM,EAAK,KAAO,IAAM,EAAKtH,MAAMgG,QAAQC,eAcrE,cAApBrI,KAAKoD,MAAMjD,MAA4C,eAApBH,KAAKoD,MAAMjD,KAC7C,GACF,kBAACwE,EAAA,EAAD,CAAMC,SAAU5E,KAAK+C,cACjB,kBAACoB,EAAA,EAAD,CAAK4F,MAAI,GACL,kBAAC9F,EAAA,EAAD,CAAK+F,GAAI,GACL,kBAACC,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CACI1E,KAAK,OACLyC,KAAK,QACLkC,YAAY,aACZjC,MAAO7C,KAAKoC,MAAMS,MAClBkC,SAAU/E,KAAKwC,iBAI3B,kBAACyB,EAAA,EAAD,CAAK+F,GAAI,GACL,kBAAChF,EAAA,EAAD,CAAQpB,UAAU,cAAlB,eAIJ,kBAACK,EAAA,EAAD,CAAK+F,GAAI,IACL,kBAACxF,EAAA,EAAD,KACI,kBAAC0F,GAAA,EAAD,KACI,qEAEJ,kBAACzF,EAAA,EAAD,KACI,kBAACwF,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CACI1E,KAAK,OACLyC,KAAK,WACLkC,YAAY,gBACZjC,MAAO7C,KAAKoC,MAAMmF,SAClBxC,SAAU/E,KAAKwC,gBAGvB,kBAACyH,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CACI1E,KAAK,WACLyC,KAAK,UACLkC,YAAY,gBACZjC,MAAO7C,KAAKoC,MAAMoF,QAClBzC,SAAU/E,KAAKwC,gBAGvB,kBAACyH,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,mBACA,kBAACtF,EAAA,EAAD,CACI1E,KAAK,OACLyC,KAAK,UACLkC,YAAY,aACZjC,MAAO7C,KAAKoC,MAAMqF,QAClB1C,SAAU/E,KAAKwC,gBAGvB,kBAACyH,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,mBACA,kBAACtF,EAAA,EAAD,CACI1E,KAAK,OACLyC,KAAK,UACLkC,YAAY,aACZjC,MAAO7C,KAAKoC,MAAM8E,QAClBnC,SAAU/E,KAAKwC,gBAGvB,kBAACwC,EAAA,EAAD,CAAQpB,UAAU,aAAaiF,QAAS7I,KAAKiG,aAA7C,sCAY5B,kBAACmE,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CAAQC,MAAM,OAAO4D,QAAS7I,KAAKwI,QAAnC,iB,GApOE6B,IAAMnF,WA0PjBC,gBAdS,SAAC/C,GACrB,MAAO,CACHuG,YAAavG,EAAMkI,kBACnB1B,aAAcxG,EAAMmI,uBAIC,SAACnF,GAC1B,OAAOC,YAAmB,CACtB5E,UAAWA,EACXG,WAAYA,GACbwE,KAGQD,CAA+Ca,IC5PxDA,G,kDACF,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAqBVZ,aAAe,SAACC,GACZ,EAAKC,SAAS,CACV0F,QAAQ,2BACD,EAAKhG,MAAMgG,SADX,kBAEF3F,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,WA1BnB,EA8BnBE,aA9BmB,uCA8BJ,WAAON,GAAP,mBAAAO,EAAA,6DACXP,EAAEQ,iBACIiF,EAAO,CACT7E,GAAI,EAAKD,MAAM1C,KAAK2C,GACpB8E,UAAW,EAAK/F,MAAMgG,QAAQD,UAC9BhI,KAAM,EAAKiD,MAAMjD,KACjBqK,OAAQ,EAAKpI,MAAMgG,QAAQoC,OAC3BnI,MAAO,EAAKD,MAAMgG,QAAQ/F,MAC1BoI,SAAW,EAAKrI,MAAMgG,QAAQqC,SAAY,EAAKrI,MAAMgG,QAAQqC,SAAW,GACxEC,KAAM,EAAKtI,MAAMgG,QAAQsC,KACzBrJ,KAAO,EAAKe,MAAMgG,QAAQ/G,KAAQ,EAAKe,MAAMgG,QAAQ/G,KAAO,GAC5DsJ,QAAS,EAAKvI,MAAMgG,QAAQuC,SAXrB,SJ6CSjK,EIhCewH,EJiC1C9G,uBAAaL,EAAKM,KAAK,qBAAsBC,KAAKC,UAAUb,GAAO,CAClEc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,SItDU,cAaLgJ,EAbK,gBAcQ7I,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OAdlE,OAcLoI,EAdK,OAeU,WAApB,EAAKnF,MAAMjD,KAAqB,EAAKiD,MAAM3C,UAAU8H,EAAK7H,MAAQ,EAAK0C,MAAMxC,WAAW2H,EAAK7H,MAC9F+C,MAAMmH,EAASlK,MACf,EAAK8H,SACL,EAAK9F,SAAS,CAACG,MAAO,KAlBX,kCJ6CQ,IAACnC,II7CT,OA9BI,wDAmDnB8H,OAnDmB,sBAmDV,8BAAAxF,EAAA,yDACA,EAAKZ,MAAMqG,MADX,uBAEKP,EAAO,CACT7E,GAAI,EAAKD,MAAM1C,KAAK2C,GACpBlD,KAA2B,WAApB,EAAKiD,MAAMjD,MAAyC,cAApB,EAAKiD,MAAMjD,KAAwB,SAAW,WAJxF,SAMqB6B,EAAWkG,GANhC,OAMKE,EANL,OAOD,EAAK1F,SAAS,CACV+F,OAAO,EACPL,QAASA,EAAQ1H,OATpB,sBAYA,EAAKgC,SAAS,EAAKmI,gBAZnB,2CAjDL,EAAKzI,MAAQ,EAAKyI,eAFH,E,gDAKnB,WAeI,MAdkB,CACdpC,OAAO,EACPL,QAAS,CACL0C,aAAc,GACdlI,KAAM,GACNmI,aAAc,GACdP,OAAQ,GACRnI,MAAO,GACPoI,SAAU,GACVC,KAAM,GACNrJ,KAAM,GACNsJ,QAAS,O,oBAiDrB,WACI,OACI,0BAAM/G,UAAU,4BACZ,kBAACoB,EAAA,EAAD,CAAQ6D,QAAS7I,KAAKwI,QAAtB,QACA,kBAACM,EAAA,EAAD,CAAOC,OAAQ/I,KAAKoC,MAAMqG,MAAOD,OAAQxI,KAAKwI,QAC1C,kBAACQ,EAAA,EAAD,CAAaR,OAAQxI,KAAKwI,QAA1B,QACA,kBAACS,EAAA,EAAD,KACI,kBAACtE,EAAA,EAAD,CAAMC,SAAU5E,KAAK+C,cACrB,kBAACkH,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,aAAmB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,OAAO6K,UAAQ,EAACpI,KAAK,OAAOC,MAA4B,YAApB7C,KAAKoD,MAAMjD,KAAsBH,KAAKoC,MAAMgG,QAAQ0C,aAAe9K,KAAKoC,MAAMgG,QAAQxF,QAEvI,YAApB5C,KAAKoD,MAAMjD,KACR,kBAAC8J,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,qBAA2B,kBAACtF,EAAA,EAAD,CAAOmG,UAAQ,EAAC7K,KAAK,OAAO2E,YAAY,sBAAsBlC,KAAK,eAAeC,MAAO7C,KAAKoC,MAAMgG,QAAQ2C,gBAC/I,GAEX,kBAACd,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,iBAAuB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,SAAS2E,YAAY,eAAelC,KAAK,SAASC,MAAO7C,KAAKoC,MAAMgG,QAAQoC,OAAQzF,SAAU/E,KAAKwC,gBACjJ,kBAACyH,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,cAAoB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,QAAQ2E,YAAY,QAAQlC,KAAK,QAAQC,MAAO7C,KAAKoC,MAAMgG,QAAQ/F,MAAO0C,SAAU/E,KAAKwC,gBAE3G,WAApBxC,KAAKoD,MAAMjD,KACR,kBAAC8J,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,iBAAuB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,gBAAgBlC,KAAK,WAAWC,MAAO7C,KAAKoC,MAAMgG,QAAQqC,SAAU1F,SAAU/E,KAAKwC,gBAClJ,kBAACyH,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,aAAmB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,kBAAkBlC,KAAK,OAAOC,MAAO7C,KAAKoC,MAAMgG,QAAQ/G,KAAM0D,SAAU/E,KAAKwC,gBAEpJ,kBAACyH,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,gBAAsB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,UAAUlC,KAAK,OAAOC,MAAO7C,KAAKoC,MAAMgG,QAAQsC,KAAM3F,SAAU/E,KAAKwC,gBACrI,kBAACyH,GAAA,EAAD,KAAW,kBAACE,GAAA,EAAD,gBAAsB,kBAACtF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,UAAUlC,KAAK,UAAUC,MAAO7C,KAAKoC,MAAMgG,QAAQuC,QAAS5F,SAAU/E,KAAKwC,gBAC3I,kBAACwC,EAAA,EAAD,eAGR,kBAACoF,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CAAQC,MAAM,OAAO4D,QAAS7I,KAAKwI,QAAnC,iB,GA9FE6B,IAAMnF,WAoHjBC,gBAdS,SAAC/C,GACrB,MAAO,CACHuG,YAAavG,EAAMkI,kBACnB1B,aAAcxG,EAAMmI,uBAIC,SAACnF,GAC1B,OAAOC,YAAmB,CACtB5E,UAAWA,EACXG,WAAYA,GACbwE,KAGQD,CAA+Ca,ICpHxDiF,G,kDACF,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IAsBVZ,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVwI,SAAS,2BACF,EAAK9I,MAAM8I,UADV,kBAEHzI,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,WA3BnB,EAgCnBE,aAhCmB,uCAgCJ,WAAON,GAAP,qCAAAO,EAAA,yDACXP,EAAEQ,iBACG,EAAKb,MAAM8I,SAAStI,MAAS,EAAKR,MAAM8I,SAASV,QAAW,EAAKpI,MAAM8I,SAAS7C,OAF1E,gBAGP5E,MAAM,mBAHC,0BAMiB,WAApB,EAAKL,MAAMjD,KANR,oBAQ4B,IAA5B,EAAKiC,MAAM8I,SAASV,OARpB,wBAUGtC,EAAO,CACTC,UAAW9H,aAAaG,QAAQ,MAChCoC,KAAM,EAAKR,MAAM8I,SAAStI,KAC1B4H,OAAQ,EAAKpI,MAAM8I,SAASV,OAC5BnI,MAAO,EAAKD,MAAM8I,SAAS7I,MAC3BoI,SAAU,EAAKrI,MAAM8I,SAAST,SAC9BC,KAAM,EAAKtI,MAAM8I,SAASR,KAC1BC,QAAS,EAAKvI,MAAM8I,SAASP,QAC7BtC,OAAQ,EAAKjG,MAAM8I,SAAS7C,QAlB7B,UAoBoBpG,EAAUiG,GApB9B,eAoBG0C,EApBH,iBAqBgB7I,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OArB1E,QAqBGoI,EArBH,OAsBH,EAAKnF,MAAM3C,UAAU8H,EAAK7H,MAC1BmB,QAAQC,IAAI8I,GACZnH,MAAMmH,EAASlK,MAxBZ,+BA4BGwH,EAAO,CACTC,UAAW9H,aAAaG,QAAQ,MAChCoC,KAAM,EAAKR,MAAM8I,SAAStI,KAC1B4H,OAAQ,IACRnI,MAAO,EAAKD,MAAM8I,SAAS7I,MAC3BoI,SAAU,EAAKrI,MAAM8I,SAAST,SAC9BC,KAAM,EAAKtI,MAAM8I,SAASR,KAC1BC,QAAS,EAAKvI,MAAM8I,SAASP,QAC7BtC,OAAQ,EAAKjG,MAAM8I,SAAS7C,QApC7B,UAsCoBpG,EAAUiG,GAtC9B,eAsCG0C,EAtCH,iBAuCgB7I,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OAvC1E,QAuCGoI,EAvCH,OAwCH,EAAKnF,MAAM3C,UAAU8H,EAAK7H,MAC1BmB,QAAQC,IAAI8I,GACZnH,MAAMmH,EAASlK,MA1CZ,mCA8C4B,IAA5B,EAAK0B,MAAM8I,SAASV,OA9CpB,wBA+CItC,EAAO,CACVC,UAAW9H,aAAaG,QAAQ,MAChCsK,aAAc,EAAK1I,MAAM8I,SAAStI,KAClCmI,aAAc,EAAK3I,MAAM8I,SAASH,aAClCP,OAAQ,EAAKpI,MAAM8I,SAASV,OAC5BnI,MAAO,EAAKD,MAAM8I,SAAS7I,MAC3BgG,OAAQ,EAAKjG,MAAM8I,SAAS7C,OAC5BhH,KAAM,EAAKe,MAAM8I,SAAS7J,KAC1BqJ,KAAM,EAAKtI,MAAM8I,SAASR,KAC1BC,QAAS,EAAKvI,MAAM8I,SAASP,SAxD9B,UA4DoBzI,EAAWgG,GA5D/B,eA4DG0C,EA5DH,iBA6DgB7I,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OA7D1E,QA6DGoI,EA7DH,OA8DH,EAAKnF,MAAMxC,WAAW2H,EAAK7H,MAC3BmB,QAAQC,IAAI8I,IACQ,GAAhBA,EAASO,KACT1H,MAAM,0BAEXA,MAAMmH,EAASlK,MAnEX,+BAuEGwH,EAAO,CACTC,UAAW9H,aAAaG,QAAQ,MAChCsK,aAAc,EAAK1I,MAAM8I,SAAStI,KAClCmI,aAAc,EAAK3I,MAAM8I,SAASH,aAClCP,OAAQ,IACRnI,MAAO,EAAKD,MAAM8I,SAAS7I,MAC3BgG,OAAQ,EAAKjG,MAAM8I,SAAS7C,OAC5BhH,KAAM,EAAKe,MAAM8I,SAAS7J,KAC1BqJ,KAAM,EAAKtI,MAAM8I,SAASR,KAC1BC,QAAS,EAAKvI,MAAM8I,SAASP,SAhF9B,UAmFoBzI,EAAWgG,GAnF/B,eAmFG0C,EAnFH,iBAoFgB7I,EAAQ,CAACsB,GAAIhD,aAAaG,QAAQ,MAAOL,KAAM,EAAKiD,MAAMjD,OApF1E,QAoFGoI,EApFH,OAqFH,EAAKnF,MAAMxC,WAAW2H,EAAK7H,MAC3BmB,QAAQC,IAAI8I,IACO,GAAhBA,EAASO,KACR1H,MAAM,0BAGVA,MAAMmH,EAASlK,MA3FZ,QA+FP,EAAK8H,SA/FE,QAiGX,EAAK9F,SAAS,EAAKmI,gBAjGR,4CAhCI,wDAoInBrC,OAAS,WACL,EAAK9F,SAAS,CACV+F,OAAQ,EAAKrG,MAAMqG,SApIvB,EAAKrG,MAAQ,EAAKyI,eAFH,E,gDAKnB,WAeI,MAdkB,CACdpC,OAAO,EACPyC,SAAU,CACNtI,KAAM,GACNmI,aAAc,GACdP,OAAQ,GACRnI,MAAO,GACPhB,KAAM,GACNoJ,SAAU,GACVC,KAAM,GACNC,QAAS,GACTtC,OAAQ,O,oBAyHpB,WACI,OACI,0BAAMzE,UAAU,4BACZ,kBAACoB,EAAA,EAAD,CAAQC,MAAM,UAAU4D,QAAS7I,KAAKwI,QAAtC,eACA,kBAACM,EAAA,EAAD,CAAOC,OAAQ/I,KAAKoC,MAAMqG,MAAOD,OAAQxI,KAAKwI,OAAQ5E,UAAW5D,KAAKoD,MAAMQ,WACxE,kBAACoF,EAAA,EAAD,CAAaR,OAAQxI,KAAKwI,QAA1B,OAAuCxI,KAAKoD,MAAMjD,KAAKiL,OAAO,GAAGC,cAAgBrL,KAAKoD,MAAMjD,KAAKkH,MAAM,GAAvG,YACA,kBAAC4B,EAAA,EAAD,KACI,kBAACtE,EAAA,EAAD,CAAMC,SAAU5E,KAAK+C,cACrB,kBAACkH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAkC,WAApB9E,KAAKoD,MAAMjD,KAAoB,QAAU,gBAAiByC,KAAK,OAAOC,MAAO7C,KAAKoC,MAAM8I,SAAStI,KAAMmC,SAAU/E,KAAKwC,gBAErI,YAApBxC,KAAKoD,MAAMjD,KACR,kBAAC8J,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,uBAAuBlC,KAAK,eAAeC,MAAO7C,KAAKoC,MAAM8I,SAASH,aAAchG,SAAU/E,KAAKwC,gBAC1I,GAEX,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,SAAS2E,YAAY,eAAelC,KAAK,SAASC,MAAO7C,KAAKoC,MAAM8I,SAASV,OAAQzF,SAAU/E,KAAKwC,gBAC3H,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,QAAQ2E,YAAY,QAAQlC,KAAK,QAAQC,MAAO7C,KAAKoC,MAAM8I,SAAS7I,MAAO0C,SAAU/E,KAAKwC,gBAExF,WAApBxC,KAAKoD,MAAMjD,KACR,kBAAC8J,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,gBAAgBlC,KAAK,WAAWC,MAAO7C,KAAKoC,MAAM8I,SAAST,SAAU1F,SAAU/E,KAAKwC,gBAC5H,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,kBAAkBlC,KAAK,OAAOC,MAAO7C,KAAKoC,MAAM8I,SAAS7J,KAAM0D,SAAU/E,KAAKwC,gBAElI,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,UAAUlC,KAAK,OAAOC,MAAO7C,KAAKoC,MAAM8I,SAASR,KAAM3F,SAAU/E,KAAKwC,gBAChH,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,gBAAgBlC,KAAK,SAASC,MAAO7C,KAAKoC,MAAM8I,SAAS7C,OAAQtD,SAAU/E,KAAKwC,gBAC1H,kBAACyH,GAAA,EAAD,KAAW,kBAACpF,EAAA,EAAD,CAAO1E,KAAK,OAAO2E,YAAY,UAAUlC,KAAK,UAAUC,MAAO7C,KAAKoC,MAAM8I,SAASP,QAAS5F,SAAU/E,KAAKwC,gBACtH,kBAACwC,EAAA,EAAD,sBAGR,kBAACoF,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CAAQC,MAAM,OAAO4D,QAAS7I,KAAKwI,QAAnC,iB,GAvKC6B,IAAMnF,WA2LhBC,gBAZS,SAAC/C,GACrB,MAAO,MAIkB,SAACgD,GAC1B,OAAOC,YAAmB,CACtB5E,UAAWA,EACXG,WAAYA,GACbwE,KAGQD,CAA+C8F,I,oBC3LxDK,GAAmB,SAAAlI,GAGvB,OAF6BmI,8BAAtBC,mBAEqB,yBAAK5H,UAAU,kCACzC,kBAAC,KAAD,CAAQzD,KAAK,YAAY8E,MAAM,UAAUwG,OAAQ,IAAKlH,MAAO,QAIjE,SAASmH,GAAsBC,EAAQxC,GACnC,IAAM9F,EAAKsI,EAAOC,SAAWD,EAAOtI,GACpC,YACgBwI,IAAZ1C,EAAI9F,IACAyI,OAAO3C,EAAI9F,GAAI0I,eAAeC,WAAWL,EAAO9I,MAAMkJ,e,IAM5DE,G,kDACL,WAAY7I,GAAQ,IAAD,8BAClB,cAAMA,IAwBP8I,OAAS,SAACC,GACT,EAAKzJ,SAAS,CAAC0J,IAAKD,IACpB,EAAK/I,MAAMiJ,YAAY,YAAaF,EAAS9I,KAzB7C,EAAKjB,MAAQ,CACZgK,IAAK,GACLE,UAAW,GACXC,YAAa,CAAC,CACZ5C,OAAQ,OACRC,SAAU,OACV4C,YAAY,GACX,CACD7C,OAAQ,eACRC,SAAU,SACV4C,YAAY,GACV,CACF7C,OAAQ,QACRC,SAAU,SACR,CACF4C,YAAY,EACZC,KAAM,SAAArJ,GAAK,OACT,kBAAC4B,EAAA,EAAD,CAAQC,MAAM,UAAU4D,QAAS,kBAAM,EAAKqD,OAAO9I,EAAMsJ,YAAzD,YAnBa,E,0CAkGnB,WAAU,IAAD,OACJC,EAAiC,cAApB3M,KAAKoD,MAAMjD,KAAwB,aAAoC,eAApBH,KAAKoD,MAAMjD,KAAyB,YAAc,GACtH,MACsB,QAApBH,KAAKoD,MAAMwJ,KACZ,kBAAC,WAAD,KACC,yBAAKhJ,UAAU,mBACd,yBAAKA,UAAU,eAAc,kBAAC,GAAD,CAAYzD,KAAMH,KAAKoD,MAAMjD,QAC1D,wBAAIyD,UAAU,eAAe5D,KAAKoD,MAAMjD,KAAKiL,OAAO,GAAGC,cAAgBrL,KAAKoD,MAAMjD,KAAKkH,MAAM,GAAK,cAEnG,yBAAKzD,UAAU,+BACd,kBAAC,IAAD,CACClD,KAAQV,KAAKoC,MAAMkK,UACnBO,iBAAoBvB,GACpBwB,QAAgC,WAApB9M,KAAKoD,MAAMjD,KAAqBH,KAAKoC,MAAM2K,eAAiB/M,KAAKoC,MAAM4K,gBACnFC,gBAAmB,IACnBC,UAAY,EACZC,oBAAqB,SAACxB,EAAQxC,GAAT,OAAiBuC,GAAsBC,EAAQxC,QAIvE,kBAAC,WAAD,KAEuB,cAApBnJ,KAAKoD,MAAMjD,MAA4C,eAApBH,KAAKoD,MAAMjD,KAC/C,yBAAKyD,UAAU,mBACd,kBAACoB,EAAA,EAAD,CAAQpB,UAAU,mBAAmBiF,QAAS,kBAAM,EAAKzF,MAAMiJ,YAAYM,EAAW,EAAKvK,MAAMgK,IAAI/I,MAArG,QAAgHsJ,EAAhH,YACA,wBAAI/I,UAAU,eAAe5D,KAAKoD,MAAMjD,KAAKiL,OAAO,GAAGC,cAAgBrL,KAAKoD,MAAMjD,KAAKkH,MAAM,GAAK,aAAcrH,KAAKoC,MAAMgK,IAAIxJ,KAAM,MAEtI,yBAAKgB,UAAU,mBACQ,QAApB5D,KAAKoD,MAAMjD,KAAkB,GAAK,yBAAKyD,UAAU,eAAc,kBAAC,GAAD,CAAYzD,KAAMH,KAAKoD,MAAMjD,QAC9F,wBAAIyD,UAAU,eAAe5D,KAAKoD,MAAMjD,KAAKiL,OAAO,GAAGC,cAAgBrL,KAAKoD,MAAMjD,KAAKkH,MAAM,KAG/F,yBAAKzD,UAAU,+BACd,kBAAC,IAAD,CACClD,KAAQV,KAAKoC,MAAMkK,UACnBO,iBAAoBvB,GACpBwB,QACsB,WAApB9M,KAAKoD,MAAMjD,MAAyC,cAApBH,KAAKoD,MAAMjD,KAC1CH,KAAKoC,MAAM2K,eACU,YAApB/M,KAAKoD,MAAMjD,MAA0C,eAApBH,KAAKoD,MAAMjD,KAC7CH,KAAKoC,MAAM4K,gBACXhN,KAAKoC,MAAMmK,YAEdU,gBAAmB,IACnBC,UAAY,EACZC,oBAAqB,SAACxB,EAAQxC,GAAT,OAAiBuC,GAAsBC,EAAQxC,W,uCAjHzE,SAAgCiE,GAC/B,MAAO,CACNd,UAA+B,WAAnBc,EAAUjN,MAAwC,cAAnBiN,EAAUjN,KAC7CiN,EAAUC,OACU,QAAnBD,EAAUjN,KACXiN,EAAUhB,IACVgB,EAAUE,QAClBP,eAAgB,CAAC,CACfpD,OAAQ,OACRC,SAAU,OACV4C,YAAY,GACV,CACF7C,OAAQ,eACRC,SAAU,SACV4C,YAAY,GACV,CACF7C,OAAQ,cACRC,SAAU,eACR,CACFD,OAAQ,mBACRC,SAAU,cACR,CACF4C,YAAY,EACZjI,MAAO,GACPkI,KAAM,SAAArJ,GAAK,OACT,kBAAC,GAAD,CAAaC,GAAID,EAAMsJ,SAASrJ,GAAIlD,KAAMiN,EAAUjN,SACpD,CACFqM,YAAY,EACZjI,MAAO,GACPgJ,KAA0B,WAAnBH,EAAUjN,KACjBsM,KAAM,SAAArJ,GAAK,OACT,kBAAC,GAAD,CAAW1C,KAAM0C,EAAMsJ,SAAUvM,KAAMiN,EAAUjN,UAGrD6M,gBAAiB,CAAC,CAChBrD,OAAQ,eACRC,SAAU,eACV4C,YAAY,GACX,CACD7C,OAAQ,eACRC,SAAU,eACV4C,YAAY,GACV,CACF7C,OAAQ,eACRC,SAAU,SACV4C,YAAY,GACV,CACF7C,OAAQ,cACRC,SAAU,eACR,CACFD,OAAQ,mBACRC,SAAU,cACR,CACF4C,YAAY,EACZjI,MAAO,GACPkI,KAAM,SAAArJ,GAAK,OACT,kBAAC,GAAD,CAAaC,GAAID,EAAMsJ,SAASrJ,GAAIlD,KAAMiN,EAAUjN,SACpD,CACFqM,YAAY,EACZjI,MAAO,GACPgJ,KAA0B,YAAnBH,EAAUjN,KACjBsM,KAAM,SAAArJ,GAAK,OACT,kBAAC,GAAD,CAAW1C,KAAM0C,EAAMsJ,SAAUvM,KAAMiN,EAAUjN,e,GA7FpCkK,IAAMnF,WAgKXC,gBARS,SAAC/C,GACxB,MAAO,CACNiL,OAAQjL,EAAMiL,OACdC,QAASlL,EAAMkL,QACflB,IAAKhK,EAAMgK,OAIEjH,CAAyB8G,I,sECpIzBtC,G,4MA9CXvH,MAAQ,CACJ2G,QAAQ,G,EAGZP,OAAS,WACL,EAAK9F,SAAS,CAACqG,QAAS,EAAK3G,MAAM2G,U,4CAGvC,WAAU,IAAD,OACL,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CACIrF,UAAU,MACVE,UAAW,2BACXD,eAAe,kBACfE,kBAAkB,EAClBC,wBAAyB,KACzBC,iBAAiB,EACjBC,iBAAiB,GACb,yBAAKJ,UAAU,SACX,kBAAC4J,GAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,MACjB,kBAACC,GAAA,EAAD,CAAa/J,UAAU,WACnB,yBAAKA,UAAU,aAAaQ,IAAKC,IAAQC,IAAI,UAAUC,MAAM,SAC7D,wBAAIX,UAAU,mBAAd,aAEJ,kBAACgK,GAAA,EAAD,CAAe/E,QAAS7I,KAAKwI,SACzB,kBAACqF,GAAA,EAAD,CAAU9E,OAAQ/I,KAAKoC,MAAM2G,OAAQ+E,QAAM,GACvC,kBAACC,GAAA,EAAD,CAAKnK,UAAU,UAAUkK,QAAM,GAEF,QAApB9N,KAAKoD,MAAMjD,KACV,kBAAC6N,GAAA,EAAD,CAASnF,QAAS,kBAAM,EAAKzF,MAAMiJ,YAAY,SAAQ,kBAAC4B,GAAA,EAAD,aACvD,GAEN,kBAACD,GAAA,EAAD,CAASnF,QAAS,kBAAM,EAAKzF,MAAMiJ,YAAY,YAAW,kBAAC4B,GAAA,EAAD,gBAC1D,kBAACD,GAAA,EAAD,CAASnF,QAAS,kBAAM,EAAKzF,MAAMiJ,YAAY,aAAY,kBAAC4B,GAAA,EAAD,iBAC3D,kBAACD,GAAA,EAAD,CAASnF,QAAS,kBAAM,EAAKzF,MAAM8K,WAAU,kBAACD,GAAA,EAAD,2B,GApCpE5D,IAAMnF,WCDrBiJ,G,kDAEL,WAAY/K,GAAQ,IAAD,EAgBhB,IAAK,IAAIgL,KAhBO,qBAClB,cAAMhL,IA0BPiL,WAAa,WACV,EAAKC,cAAgBD,WAAW,EAAKE,WAAY,MA5BjC,EA+BlBA,WAAa,WACZ,EAAK7L,SAAS,CAAE6L,YAAY,IAC5B,EAAKC,gBAjCY,EAoClBC,aAAe,WACd,EAAKC,eACL,EAAKL,cAtCY,EAyClBM,QAAU,WAGR,IAAK,IAAIP,KAFT,EAAKM,eAES,EAAK/G,OACjB5B,OAAO6I,oBAAoB,EAAKjH,OAAOyG,GAAI,EAAKK,eA7ClC,EAwDnBI,WAxDmB,sBAwDN,kCAAA7L,EAAA,6DACNkF,EAAO,CACZ7E,GAAIhD,aAAaG,QAAQ,MACzBL,KAAM,UAHK,SAKa4B,EAAQmG,GALrB,cAKN4G,EALM,OAMZ,EAAK1L,MAAM3C,UAAUqO,EAAWpO,MAE1BqO,EAAQ,CACb1L,GAAIhD,aAAaG,QAAQ,MACzBL,KAAM,WAVK,SAYc4B,EAAQgN,GAZtB,OAYNC,EAZM,OAaZ,EAAK5L,MAAMxC,WAAWoO,EAAYtO,MAbtB,4CAxDM,EAwEnB8N,aAAe,WACV,EAAKpM,MAAMmM,YACd9K,MAAM,8CACP,EAAKL,MAAM3C,UAAU,IACrB,EAAK2C,MAAMxC,WAAW,IACtB,EAAK+N,UACLrL,EAAK4K,QAAO,WACX,EAAK9K,MAAMG,QAAQC,KAAK,SA/EP,EAmFnB6I,YAnFmB,uCAmFL,WAAO4C,GAAP,SAAAjM,EAAA,sEACP,EAAK6L,aADE,OAEb,EAAKnM,SAAS,CAAEgG,MAAOuG,IAFV,2CAnFK,sDAElB,EAAK7M,MAAQ,CACZmM,YAAY,EACZ7F,MAAO,SACPwG,SAAS,GAEV,EAAKvH,OAAS,CACV,OACA,YACA,YACA,QACA,SACA,YAGY,EAAKA,OACjB5B,OAAOoJ,iBAAiB,EAAKxH,OAAOyG,GAAI,EAAKK,cAjB/B,OAoBlB,EAAKJ,aApBa,E,8JAuBnB,WACOrO,KAAKsO,eAAeI,aAAa1O,KAAKsO,mB,sEAyB7C,sBAAAtL,EAAA,yDACgC,QAA3BM,EAAKmC,kBADV,gBAEEzF,KAAKoD,MAAMG,QAAQC,KAAK,KAF1B,sCAIYxD,KAAK6O,aAJjB,gD,0EAuCA,WACC,OACC,kBAAC,WAAD,KACM,kBAAC,GAAD,CAAQxC,YAAarM,KAAKqM,YAAalM,KAAK,MAAM+N,OAAQlO,KAAKwO,eACnE,kBAAC,GAAD,CAAO5B,KAAK,MAAMzM,KAAMH,KAAKoC,MAAMsG,MAAOrF,GAAIhD,aAAaG,QAAQ,a,GA9FtD0E,aAiHHC,gBAbS,SAAC/C,GACxB,MAAO,CACNc,YAAad,EAAMc,gBAIQ,SAACkC,GAC7B,OAAOC,YAAmB,CACzB5E,UAAWA,EACXG,WAAYA,GACVwE,KAGWD,CAA+CgJ,ICjHxDiB,G,kDAEL,WAAYhM,GAAQ,IAAD,EAehB,IAAK,IAAIgL,KAfO,qBAClB,cAAMhL,IAyBPiL,WAAa,WACV,EAAKC,cAAgBD,WAAW,EAAKE,WAAY,MA3BjC,EA8BlBA,WAAa,WACZ,EAAK7L,SAAS,CAAE6L,YAAY,IAC5B,EAAKC,gBAhCY,EAmClBC,aAAe,WACd,EAAKC,eACL,EAAKL,cArCY,EAwClBM,QAAU,WAGR,IAAK,IAAIP,KAFT,EAAKM,eAES,EAAK/G,OACjB5B,OAAO6I,oBAAoB,EAAKjH,OAAOyG,GAAI,EAAKK,eA5ClC,EAuDnBI,WAvDmB,uCAuDN,WAAOxL,GAAP,yBAAAL,EAAA,6DACNkF,EAAO,CACZ7E,GAAIA,EACJlD,KAAM,UAHK,SAKa4B,EAAQmG,GALrB,cAKN4G,EALM,OAMZ,EAAK1L,MAAM3C,UAAUqO,EAAWpO,MAE1BqO,EAAQ,CACb1L,GAAIA,EACJlD,KAAM,WAVK,SAYc4B,EAAQgN,GAZtB,cAYNC,EAZM,OAaZ,EAAK5L,MAAMxC,WAAWoO,EAAYtO,MAE5B2O,EAAQ,CACbhM,GAAIhD,aAAaG,QAAQ,MACzBL,KAAM,OAjBK,UTSUO,ESUQ2O,ETT/BjO,uBAAaL,EAAKM,KAAK,kBAAmBC,KAAKC,UAAUb,GAAO,CAC/Dc,QAAS,CACR,eAAgB,sBAEfC,MAAK,SAAAC,GACP,OAAOA,EAAIhB,QACTiB,OAAM,SAAAC,GAER,OADAC,QAAQC,IAAIF,GACL,SSlBK,QAmBN0N,EAnBM,OAoBZ,EAAKlM,MAAMvC,OAAOyO,EAAQ5O,MApBd,kCTSS,IAACA,ISTV,OAvDM,wDA8EnB8N,aAAe,WACV,EAAKpM,MAAMmM,YACd9K,MAAM,8CACP,EAAKL,MAAM3C,UAAU,IACrB,EAAK2C,MAAMxC,WAAW,IACtB,EAAKwC,MAAMvC,OAAO,IAClB,EAAK8N,UACLrL,EAAK4K,QAAO,WACX,EAAK9K,MAAMG,QAAQC,KAAK,SAtFP,EA0FnB6I,YA1FmB,uCA0FL,WAAO4C,GAAP,2BAAAjM,EAAA,6DAAkBK,EAAlB,+BAAqBhD,aAAaG,QAAQ,MAA1C,SACP,EAAKqO,WAAWxL,GADT,OAEb,EAAKX,SAAS,CAAEgG,MAAOuG,IAFV,2CA1FK,sDAElB,EAAK7M,MAAQ,CACZmM,YAAY,EACZ7F,MAAO,UAER,EAAKf,OAAS,CACV,OACA,YACA,YACA,QACA,SACA,YAGY,EAAKA,OACjB5B,OAAOoJ,iBAAiB,EAAKxH,OAAOyG,GAAI,EAAKK,cAhB/B,OAmBlB,EAAKJ,aAnBa,E,8JAsBnB,WACOrO,KAAKsO,eAAeI,aAAa1O,KAAKsO,mB,sEAyB7C,sBAAAtL,EAAA,yDACgC,QAA3BM,EAAKmC,kBADV,gBAEEzF,KAAKoD,MAAMG,QAAQC,KAAK,KAF1B,sCAIYxD,KAAK6O,WAAWxO,aAAaG,QAAQ,OAJjD,gD,0EA+CA,WACC,OACC,kBAAC,WAAD,KACM,kBAAC,GAAD,CAAQ6L,YAAarM,KAAKqM,YAAalM,KAAK,MAAM+N,OAAQlO,KAAKwO,eAC/D,kBAAC,GAAD,CAAO5B,KAAK,MAAMzM,KAAMH,KAAKoC,MAAMsG,MAAO2D,YAAarM,KAAKqM,mB,GArGnDnH,aA0HHC,gBAdS,SAAC/C,GACxB,MAAO,CACNc,YAAad,EAAMc,gBAIQ,SAACkC,GAC7B,OAAOC,YAAmB,CACzB5E,UAAWA,EACXG,WAAYA,EACZC,OAAQA,GACNuE,KAGWD,CAA+CiK,IC9G/CG,OAbf,WACE,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAI/L,UAAavB,IACrC,kBAAC,EAAD,CAAcsN,KAAO,OAAO/L,UAAayK,KACzC,kBAAC,EAAD,CAAcsB,KAAO,OAAO/L,UAAa0L,KACzC,kBAAC,IAAD,CAAO1L,UAAavB,OCyBXuN,G,4MAnCXtN,MAAQ,CACJqG,OAAO,G,EAGXD,OAAS,WACL,EAAK9F,SAAS,CACV+F,OAAQ,EAAKrG,MAAMqG,S,4CAI3B,WACI,OACI,kBAAC,WAAD,KACI,yBAAK7E,UAAU,wBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,4BACZ,kBAACoB,EAAA,EAAD,CAAQC,MAAM,OAAO4D,QAAS7I,KAAKwI,QAAnC,WACA,kBAACM,EAAA,EAAD,CAAOC,OAAQ/I,KAAKoC,MAAMqG,MAAOD,OAAQxI,KAAKwI,QAC1C,kBAACQ,EAAA,EAAD,CAAaR,OAAQxI,KAAKwI,QAA1B,WACA,kBAACS,EAAA,EAAD,sBAGA,kBAACmB,GAAA,EAAD,KACI,kBAACpF,EAAA,EAAD,CAAQC,MAAM,OAAO4D,QAAS7I,KAAKwI,QAAnC,qB,GA1BnB6B,IAAMnF,WCHrByK,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCAfA,GAAe,CACpB,CACGhG,OAAQ,OACRC,SAAU,OACbF,MAAO,GAEP,CACGC,OAAQ,WACRC,SAAU,SACbF,MAAO,GAEP,CACGC,OAAQ,QACRC,SAAU,QACbF,MAAO,GAEP,CACGC,OAAQ,gBACRC,SAAU,WACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,OACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,UACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,UACbF,MAAO,IClCFiG,GAAe,CACpB,CACGhG,OAAQ,cACRC,SAAU,eACbF,MAAO,GAEJ,CACAC,OAAQ,sBACRC,SAAU,eACVF,MAAO,GAEV,CACGC,OAAQ,WACRC,SAAU,SACbF,MAAO,GAEP,CACGC,OAAQ,QACRC,SAAU,QACbF,MAAO,GAEP,CACGC,OAAQ,kBACRC,SAAU,OACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,OACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,UACbF,MAAO,GAEP,CACGC,OAAQ,UACRC,SAAU,UACbF,MAAO,ICtBOkG,GATEC,YAAgB,CAChCxC,ONPc,WAAyC,IAA/BjL,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,kBACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,IMGlBkL,QLRc,WAAyC,IAA/BlL,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,mBACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,IKIlBc,YHTc,WAAyC,IAA/Bd,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,mBACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,IGKlBkI,kBF0Bc,WAAyC,IAA/BlI,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,sBACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,IE9BlBmI,mBD8Bc,WAAyC,IAA/BnI,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,uBACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,IClClBgK,IJZc,WAAyC,IAA/BhK,EAA8B,uDAAtBuN,GAAcG,EAAQ,uCACnD,OAAOA,EAAO3P,MACV,IAAK,eACD,OAAO2P,EAAOnP,QAClB,QACI,OAAOyB,M,SKKC2N,QACW,cAA7BhK,OAAOF,SAASmK,UAEe,UAA7BjK,OAAOF,SAASmK,UAEhBjK,OAAOF,SAASmK,SAASC,MACvB,2DClBN,uCAWO,IAAMC,GAAQC,YACnBC,GACAC,YAAgBC,OAGlBC,IAAS/K,OACR,kBAAC,IAAD,CAAU0K,MAAOA,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEDM,SAASC,eAAe,SD4GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnP,MAAK,SAAAoP,GACjCA,EAAaC,iB,+UEnInBC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.144472c4.chunk.js","sourcesContent":["class Auth {\n\tconstructor() {\n\t\tthis.ctm_authenticated = false;\n\t\tthis.cth_authenticated = false;\n\t}\n\n\tlogin(type, callback) {\n\t\t// (type === 'ctm') ? this.ctm_authenticated = true : this.cth_authenticated = true;\n\t\tlocalStorage.setItem('login_state', type);\n\t\tcallback();\n\t}\n\n\tlogout(callback) {\n\t\t// this.ctm_authenticated = false;\n\t\t// this.cth_authenticated = false;\n\t\tlocalStorage.setItem('login_state', false);\n\t\tlocalStorage.removeItem('id');\n\t\tcallback();\n\t}\n\n\tisAuthenticated() {\n\t\t// return this.ctm_authenticated || this.cth_authenticated;\n\t\treturn localStorage.getItem('login_state');\n\t}\n}\n\nexport default new Auth()","export const addAlumni = (data) => {\n    return {\n        type: 'ADD_ALUMNI_DATA',\n        payload: data\n    }\n};\n\nexport const addCompany = (data) => {\n    return {\n        type: 'ADD_COMPANY_DATA',\n        payload: data\n    }\n};\n\nexport const addCTM = (data) => {\n    return {\n        type: 'ADD_CTM_DATA',\n        payload: data\n    }\n};\n\nexport const addUser = (data) => {\n    return {\n        type: 'ADD_USER_DETAILS',\n        payload: data\n    }\n};","import axios from 'axios';\n\nexport const HTTP = axios.create({\n\tbaseURL: \"https://mainapi.springfest.in\"\n});","import { HTTP } from '../Config/apiConfig'\nimport { trackPromise } from 'react-promise-tracker';\n\nexport const login = (data) => \n\ttrackPromise(HTTP.post('sfdiary/login', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}));\n\nexport const getData = (data) => \n\ttrackPromise(HTTP.post('sfdiary/getdata', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const getDetails = (data) => \n\ttrackPromise(HTTP.post('sfdiary/getdetails', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const addUpdate = (data) => \n\ttrackPromise(HTTP.post('sfdiary/addupdate', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const newAlumni = (data) => \n\ttrackPromise(HTTP.post('sfdiary/addalumni', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const newCompany = (data) => \n\ttrackPromise(HTTP.post('sfdiary/addcompany', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const getCTMS = (data) => \n\ttrackPromise(HTTP.post('sfdiary/getctms', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))\n\nexport const editDetails = (data) => \n\ttrackPromise(HTTP.post('sfdiary/editdetail', JSON.stringify(data), {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t}).then(res => {\n\t\treturn res.data;\n\t}).catch(err => {\n\t\tconsole.log(err);\n\t\treturn null;\n\t}))","import React, { Component, Fragment } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport auth from '../Config/Auth'\nimport { addUser } from '../Actions'\nimport { login } from '../services'\nimport sflogo from '../assets/sflogo.png'\nimport '../Stylesheets/Landings.sass'\n\nimport { \n\tForm, Input,\n\tButton,\n\tRow, Col,\n\tCard, CardBody, CardTitle\n} from 'reactstrap';\n\nclass Landing extends Component {\n\tstate = {\n\t\tdata: {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t},\n\t\tshowForm: false\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tdata: {\n\t\t\t\t...this.state.data,\n\t\t\t\t[e.target.name]: e.target.value\n\t\t\t}\n\t\t})\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ showForm: !this.state.showForm })\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst userDetails = await login(this.state.data);\n\t\tif (userDetails.data.por === 'ctm' || userDetails.data.por === 'cth') {\n\t\t\tthis.props.addUser(userDetails.data);\n\t\t\tlocalStorage.setItem('id', userDetails.data.id);\n\t\t\tauth.login(userDetails.data.por, () => {\n\t\t\t\tthis.props.history.push('/' + userDetails.data.por)\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\talert(userDetails.data);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<ReactCSSTransitionGroup\n          component=\"div\"\n          transitionName=\"TabsAnimation\"\n          className = {\"h-80\"}\n          transitionAppear={true}\n          transitionAppearTimeout={0}\n          transitionEnter={false}\n          transitionLeave={false}>\n\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t<Row className=\"mt-4\">\n\t\t\t\t\t\t\t<Col className= \"col-xs-12 col-md-7 font-size-lg text-center\">\n\t\t\t\t\t\t\t\t<img src={sflogo} alt=\"SF-logo\" width=\"300rem\"/>\n\t\t\t\t\t\t\t\t<h1 className=\"pe-4x\">SF Diary</h1>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col className=\"col-xs-6 col-md-4\">\n\t\t\t\t\t\t\t\t<Card className=\"main-card mb-3\">\n\t\t\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t\t\t<CardTitle className=\"text-center pe-2x\">Login</CardTitle>\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.data.email} onChange={this.handleChange}/><br />\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.data.password} onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" className=\"mt-3\">Login</Button>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</ReactCSSTransitionGroup>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\t\n\t}\n}\n\nconst matchDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\taddUser: addUser\n\t}, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Landing);","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from '../Config/Auth'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n\treturn (\n\t\t<Route \n\t\t\t{...rest}\n\t\t\trender = {(props) => \n\t\t\t\t(auth.isAuthenticated()) ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) :(\n\t\t\t\t\t<Redirect to = {{\n\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t\tstate: { from: props.location }\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)\t \n\t\t\t}\n\t\t/>\n\t);\n}","import React from 'react';\nimport {\n    Button, Row, Col,\n    Modal, ModalHeader, ModalBody, ModalFooter,\n    Form, Input, FormGroup,\n    ListGroup, ListGroupItem, Label, Card, CardHeader, CardBody\n} from 'reactstrap';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getDetails, addUpdate, getData } from '../../services'\nimport gCalendar from '../../Config/gCalendarConfig.json'\nimport { addAlumni, addCompany } from '../../Actions'\nvar gapi = window.gapi\nclass DetailModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            value: '',\n            details: {},\n            table: [],\n            gc_title: \"\",\n            gc_body: \"\",\n            gc_date: \"\",\n            gc_time: \"\"\n        };\n    } \n    handleClick = () => {\n        gapi.load('client:auth2', () => {\n            console.log(\"gapi loaded\")\n            gapi.client.init({\n                apiKey: gCalendar.API_KEY,\n                clientId: gCalendar.CLIENT_ID,\n                discoveryDocs: gCalendar.DISCOVERY_DOCS,\n                scope: gCalendar.SCOPES\n            })\n            gapi.client.load('calendar', 'v3', ()=> {console.log('OK!')})\n            gapi.auth2.getAuthInstance().signIn()\n            .then(() => {\n                var endtime = this.state.gc_time\n                var h = Number(endtime.slice(0, 2))+1\n                endtime = ('0' + h).slice(-2) + endtime.slice(2)\n                var event = {\n                    'summary': this.state.gc_title,\n                    'description': this.state.gc_body,\n                    'start': {\n                        'dateTime': this.state.gc_date+'T'+this.state.gc_time+':00',\n                        'timeZone': 'Asia/Kolkata'\n                    },\n                    'end': {\n                        'dateTime': this.state.gc_date+'T'+endtime+':00',\n                        'timeZone': 'Asia/Kolkata'\n                    },\n                    'reminders': {\n                        'useDefault': false,\n                        'overrides': [\n                            {'method': 'popup', 'minutes': 120},\n                            {'method': 'popup', 'minutes': 30}\n                        ]\n                    }\n                };\n                var request = gapi.client.calendar.events.insert({\n                    'calendarId': 'primary',\n                    'resource': event\n                });\n                    \n                request.execute(function(event) {\n                    window.open(event.htmlLink);\n                });\n            }).catch((er) => {\n                console.log(er.error)\n            })\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!this.state.value) {\n            alert(\"Field is empty\");\n        }\n        else {\n            const temp = {\n                id: this.props.id,\n                member_id: this.state.details.member_id,\n                update: this.state.value,\n                type: this.props.type,\n                n_updates: this.state.details.n_updates\n            };\n            const response = await addUpdate(temp);\n            console.log(temp);\n            const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n            (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\n            this.toggle();\n        }\n        this.setState({value: ''})\n    }\n\n    toggle = async () => {\n        if (!this.state.modal) {\n            const temp = {\n                id: this.props.id,\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\n            };\n            const details = await getDetails(temp);\n            this.setState({\n                details: details.data\n            });\n        }\n        this.setState({\n            table: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? this.props.alumniTable : this.props.companyTable,\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <span className=\"d-inline-block mb-2 mr-2\">\n                {\n                    (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \n                    ? <Button color=\"primary\" onClick={this.toggle}>Details</Button> : \n                    <Button color=\"primary\" onClick={this.toggle}>Update</Button>\n                }\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    {\n                        (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \n                        ? <ModalHeader toggle={this.toggle}>Details</ModalHeader> : \n                        <ModalHeader toggle={this.toggle}>Update</ModalHeader>\n                    }\n                    <ModalBody>\n                        <table className=\"w-100\">\n                            <tbody>\n                            {\n                                this.state.table.map((row) => {\n                                    const keys = Object.keys(this.state.details);\n                                    const updates = keys.splice(13, 2*(this.state.details.n_updates-1)).concat(keys.splice(-3, 1), keys.splice(-1, 1));\n                                    return (\n                                        <tr key={row.index}>\n                                            <td>{row.Header}</td>\n                                            <td>{(row.accessor !== 'updates') \n                                                ? this.state.details[row.accessor]\n                                                : <ListGroup>\n                                                        {updates.map((update, index) => {\n                                                            return (\n                                                                <ListGroupItem \n                                                                    className={\"border-0 p-0\"} \n                                                                    key={update}>\n                                                                        {((index%2) ? \"- \" : \"\") + this.state.details[update]}\n                                                                </ListGroupItem>\n                                                            );\n                                                        })}\n                                                  </ListGroup>\n                                                }\n                                            </td>\n                                        </tr>\n                                    );\n                                })\n                            }\n                            </tbody>\n                        </table>\n                        {\n                            (this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") \n                            ? \"\" : \n                            <Form onSubmit={this.handleSubmit}>\n                                <Row form>\n                                    <Col md={8}>\n                                        <FormGroup>\n                                            <Input \n                                                type=\"text\" \n                                                name=\"value\" \n                                                placeholder=\"Add Update\" \n                                                value={this.state.value} \n                                                onChange={this.handleChange} \n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={4}>\n                                        <Button className=\"float-left\">\n                                            Add Update\n                                        </Button>\n                                    </Col>\n                                    <Col md={12}>\n                                        <Card>\n                                            <CardHeader>\n                                                <h6>Add Reminder through Google Calendar</h6>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup>\n                                                    <Input \n                                                        type=\"text\" \n                                                        name=\"gc_title\" \n                                                        placeholder=\"Event Summary\" \n                                                        value={this.state.gc_title} \n                                                        onChange={this.handleChange} \n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input \n                                                        type=\"textarea\" \n                                                        name=\"gc_body\" \n                                                        placeholder=\"Event Details\" \n                                                        value={this.state.gc_body} \n                                                        onChange={this.handleChange} \n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label>Event Date</Label>\n                                                    <Input \n                                                        type=\"date\" \n                                                        name=\"gc_date\" \n                                                        placeholder=\"Event date\" \n                                                        value={this.state.gc_date}\n                                                        onChange={this.handleChange} \n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label>Event Time</Label>\n                                                    <Input \n                                                        type=\"time\" \n                                                        name=\"gc_time\" \n                                                        placeholder=\"Event Time\" \n                                                        value={this.state.gc_time}\n                                                        onChange={this.handleChange} \n                                                    />\n                                                </FormGroup>\n                                                <Button className=\"float-left\" onClick={this.handleClick}>\n                                                    Add Event to Google Calendar\n                                                </Button>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                                    \n                                    \n                                </Row>\n                            </Form>\n                        }\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        alumniTable: state.alumniDetailTable,\n        companyTable: state.companyDetailTable\n    }\n}\n\nconst matchDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        addAlumni: addAlumni,\n        addCompany: addCompany\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);","import React from 'react';\nimport {\n    Button,\n    Modal, ModalHeader, ModalBody, ModalFooter,\n    Form, Input, FormGroup, Label\n} from 'reactstrap';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getDetails, getData, editDetails } from '../../services'\nimport { addAlumni, addCompany } from '../../Actions'\n\nclass DetailModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.getInitState();\n    }\n\n    getInitState() {\n        const initState = {\n            modal: false,\n            details: {\n                company_name: '',\n                name: '',\n                contact_name: '',\n                mobile: '',\n                email: '',\n                linkedin: '',\n                addr: '',\n                post: '',\n                remarks: '',\n            }\n        };\n        return initState;\n    }\n    handleChange = (e) => {\n        this.setState({\n            details: {\n                ...this.state.details,\n                [e.target.name]: e.target.value\n            }})\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const temp = {\n            id: this.props.data.id,\n            member_id: this.state.details.member_id,\n            type: this.props.type,\n            mobile: this.state.details.mobile,\n            email: this.state.details.email,\n            linkedin: (this.state.details.linkedin) ? this.state.details.linkedin : '',\n            addr: this.state.details.addr,\n            post: (this.state.details.post) ? this.state.details.post : '',\n            remarks: this.state.details.remarks\n        };\n        const response = await editDetails(temp);\n        const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n        (this.props.type === 'alumni') ? this.props.addAlumni(Data.data) : this.props.addCompany(Data.data);\n        alert(response.data);\n        this.toggle();\n        this.setState({value: ''})\n    }\n\n    toggle = async () => {\n        if (!this.state.modal) {\n            const temp = {\n                id: this.props.data.id,\n                type: (this.props.type === \"alumni\" || this.props.type === \"ctmAlumni\") ? \"alumni\" : \"company\"\n            };\n            const details = await getDetails(temp);\n            this.setState({\n                modal: true,\n                details: details.data\n            });\n        }\n        else this.setState(this.getInitState());\n    }\n\n    render() {\n        return (\n            <span className=\"d-inline-block mb-2 mr-2\">\n                <Button onClick={this.toggle}>Edit</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Edit</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                        <FormGroup><Label>Name</Label><Input type=\"text\" disabled name=\"name\" value={(this.props.type === \"company\") ? this.state.details.company_name : this.state.details.name} /></FormGroup>\n                            {\n                                (this.props.type === \"company\") ?\n                                    <FormGroup><Label>Contact Name</Label><Input disabled type=\"text\" placeholder=\"Contact Person name\" name=\"contact_name\" value={this.state.details.contact_name} /></FormGroup>\n                                     : \"\"\n                            }\n                            <FormGroup><Label>Phone No</Label><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.details.mobile} onChange={this.handleChange} /></FormGroup>\n                            <FormGroup><Label>Email</Label><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.details.email} onChange={this.handleChange} /></FormGroup>\n                            {\n                                (this.props.type === \"alumni\") ?\n                                    <FormGroup><Label>LinkedIn</Label><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.details.linkedin} onChange={this.handleChange} /></FormGroup>\n                                    : <FormGroup><Label>Post</Label><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.details.post} onChange={this.handleChange} /></FormGroup>\n                            }\n                            <FormGroup><Label>Address</Label><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.details.addr} onChange={this.handleChange} /></FormGroup>\n                            <FormGroup><Label>Remarks</Label><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.details.remarks} onChange={this.handleChange} /></FormGroup>\n                            <Button>Save</Button>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        alumniTable: state.alumniDetailTable,\n        companyTable: state.companyDetailTable\n    }\n}\n\nconst matchDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        addAlumni: addAlumni,\n        addCompany: addCompany\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(DetailModal);\n","import React from 'react';\nimport {\n    Button,\n    Modal, ModalHeader, ModalBody, ModalFooter,\n    Form, Input, FormGroup\n} from 'reactstrap';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { newAlumni, newCompany, getData } from '../../services'\nimport { addAlumni, addCompany } from '../../Actions'\n\nclass AddContact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.getInitState();\n    }\n\n    getInitState() {\n        const initState = {\n            modal: false,\n            formData: {\n                name: '',\n                contact_name: '',\n                mobile: '',\n                email: '',\n                post: '',\n                linkedin: '',\n                addr: '',\n                remarks: '',\n                update: ''\n            }\n        };\n        return initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            formData: {\n                ...this.state.formData,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!this.state.formData.name && !this.state.formData.mobile && !this.state.formData.update ) {\n            alert(\"Fill all fields\");\n        }\n        else {\n            if (this.props.type === \"alumni\") {\n                \n                if(this.state.formData.mobile!=\"\")\n               { \n                const temp = {\n                    member_id: localStorage.getItem('id'),\n                    name: this.state.formData.name,\n                    mobile: this.state.formData.mobile,\n                    email: this.state.formData.email,\n                    linkedin: this.state.formData.linkedin,\n                    addr: this.state.formData.addr,\n                    remarks: this.state.formData.remarks,\n                    update: this.state.formData.update\n                };\n                const response = await newAlumni(temp);\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n                this.props.addAlumni(Data.data);\n                console.log(response);\n                alert(response.data);\n            }\n            else\n            { \n                const temp = {\n                    member_id: localStorage.getItem('id'),\n                    name: this.state.formData.name,\n                    mobile: \" \",\n                    email: this.state.formData.email,\n                    linkedin: this.state.formData.linkedin,\n                    addr: this.state.formData.addr,\n                    remarks: this.state.formData.remarks,\n                    update: this.state.formData.update\n                };\n                const response = await newAlumni(temp);\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n                this.props.addAlumni(Data.data);\n                console.log(response);\n                alert(response.data);\n            }\n            }\n            else {\n                if(this.state.formData.mobile!=\"\")\n                {const temp = {\n                    member_id: localStorage.getItem('id'),\n                    company_name: this.state.formData.name,\n                    contact_name: this.state.formData.contact_name,\n                    mobile: this.state.formData.mobile,\n                    email: this.state.formData.email,\n                    update: this.state.formData.update,\n                    post: this.state.formData.post,\n                    addr: this.state.formData.addr,\n                    remarks: this.state.formData.remarks\n                };\n              // console.log(temp);\n                //alert(this.state.formData.mobile);\n                const response = await newCompany(temp);\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n                this.props.addCompany(Data.data);\n                console.log(response);\n                 if(response.code==-2)\n                    alert(\"Please fill all fields\");\n                    else\n               alert(response.data);\n            }\n            else\n            {\n                const temp = {\n                    member_id: localStorage.getItem('id'),\n                    company_name: this.state.formData.name,\n                    contact_name: this.state.formData.contact_name,\n                    mobile: \" \",\n                    email: this.state.formData.email,\n                    update: this.state.formData.update,\n                    post: this.state.formData.post,\n                    addr: this.state.formData.addr,\n                    remarks: this.state.formData.remarks\n                };\n                //alert(this.state.formData.mobile);\n                const response = await newCompany(temp);\n                const Data = await getData({id: localStorage.getItem('id'), type: this.props.type});\n                this.props.addCompany(Data.data);\n                console.log(response);\n                if(response.code==-2)\n                    alert(\"Please fill all fields\");\n                    else\n\n                alert(response.data);\n            }\n                \n            }\n            this.toggle();\n        }\n        this.setState(this.getInitState());\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <span className=\"d-inline-block mb-2 mr-2\">\n                <Button color=\"primary\" onClick={this.toggle}>Add Contact</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Add {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)} Contact</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                        <FormGroup><Input type=\"text\" placeholder={(this.props.type === \"alumni\") ?\"Name*\" : \"Comapny Name*\"} name=\"name\" value={this.state.formData.name} onChange={this.handleChange} /></FormGroup>\n                            {\n                                (this.props.type === \"company\") ?\n                                    <FormGroup><Input type=\"text\" placeholder=\"Contact Person name*\" name=\"contact_name\" value={this.state.formData.contact_name} onChange={this.handleChange} /></FormGroup>\n                                     : \"\"\n                            }\n                            <FormGroup><Input type=\"number\" placeholder=\"Phone number\" name=\"mobile\" value={this.state.formData.mobile} onChange={this.handleChange} /></FormGroup>\n                            <FormGroup><Input type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.formData.email} onChange={this.handleChange} /></FormGroup>\n                            {\n                                (this.props.type === \"alumni\") ?\n                                    <FormGroup><Input type=\"text\" placeholder=\"LinkedIn link\" name=\"linkedin\" value={this.state.formData.linkedin} onChange={this.handleChange} /></FormGroup>\n                                    : <FormGroup><Input type=\"text\" placeholder=\"Post of Contact\" name=\"post\" value={this.state.formData.post} onChange={this.handleChange} /></FormGroup>\n                            }\n                            <FormGroup><Input type=\"text\" placeholder=\"Address\" name=\"addr\" value={this.state.formData.addr} onChange={this.handleChange} /></FormGroup>\n                            <FormGroup><Input type=\"text\" placeholder=\"First Update*\" name=\"update\" value={this.state.formData.update} onChange={this.handleChange} /></FormGroup>\n                            <FormGroup><Input type=\"text\" placeholder=\"Remarks\" name=\"remarks\" value={this.state.formData.remarks} onChange={this.handleChange} /></FormGroup>\n                            <Button>Add Contact</Button>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst matchDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        addAlumni: addAlumni,\n        addCompany: addCompany\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(AddContact);\n","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'reactstrap'\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\nimport DetailModal from './Modal'\nimport EditModal from './editModal'\nimport AddContact from './addContact'\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nconst LoadingIndicator = props => {\n\tconst { promiseInProgress } = usePromiseTracker();\n\n  return promiseInProgress && <div className=\"loader t-container text-center\">\n  \t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} />\n    </div>\n}  \n\nfunction filterCaseInsensitive(filter, row) {\n    const id = filter.pivotId || filter.id;\n    return (\n        row[id] !== undefined ?\n            String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\n        :\n            true\n    );\n}\n\nclass Table extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tctm: {},\n\t\t\ttableData: [],\n\t\t\tcolumns_ctm: [{ \n\t\t\t\t\tHeader: 'Name',\n\t\t\t\t\taccessor: 'name',\n\t\t\t\t\tfilterable: true\n\t\t\t\t},{\n\t\t\t\t\tHeader: 'Phone Number',\n\t\t\t\t\taccessor: 'mobile',\n\t\t\t\t\tfilterable: true\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Email',\n\t\t\t\t\taccessor: 'email'\n\t\t\t\t}, {\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\tCell: props => \n\t\t\t\t\t\t(<Button color=\"primary\" onClick={() => this.setCTM(props.original)}>View</Button>)\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\n\tsetCTM = (ctm_data) => {\n\t\tthis.setState({ctm: ctm_data});\n\t\tthis.props.changeTable(\"ctmAlumni\", ctm_data.id);\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps) {\n\t\treturn {\n\t\t\ttableData: (nextProps.type === 'alumni' || nextProps.type === 'ctmAlumni') \n\t\t\t\t\t\t\t\t ? nextProps.alumni \n\t\t\t\t\t\t\t\t : (nextProps.type === \"ctm\") \n\t\t\t\t\t\t\t\t ? nextProps.ctm \n\t\t\t\t\t\t\t\t : nextProps.company,\n\t\t\tcolumns_alumni: [{ \n\t\t\t\t\tHeader: 'Name',\n\t\t\t\t\taccessor: 'name',\n\t\t\t\t\tfilterable: true\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Phone Number',\n\t\t\t\t\taccessor: 'mobile',\n\t\t\t\t\tfilterable: true\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Last Update',\n\t\t\t\t\taccessor: 'last_update'\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Last Update Date',\n\t\t\t\t\taccessor: 'updated_at'\n\t\t\t\t}, {\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\twidth: 80,\n\t\t\t\t\tCell: props => \n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\n\t\t\t\t}, {\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\twidth: 60,\n\t\t\t\t\tshow: (nextProps.type === \"alumni\"),\n\t\t\t\t\tCell: props => \n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns_company: [{ \n\t\t\t\t\tHeader: 'Company Name',\n\t\t\t\t\taccessor: 'company_name',\n\t\t\t\t\tfilterable: true\n\t\t\t\t},{ \n\t\t\t\t\tHeader: 'Contact Name',\n\t\t\t\t\taccessor: 'contact_name',\n\t\t\t\t\tfilterable: true\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Phone Number',\n\t\t\t\t\taccessor: 'mobile',\n\t\t\t\t\tfilterable: true\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Last Update',\n\t\t\t\t\taccessor: 'last_update'\n\t\t\t\t}, {\n\t\t\t\t\tHeader: 'Last Update Date',\n\t\t\t\t\taccessor: 'updated_at'\n\t\t\t\t}, {\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\twidth: 80,\n\t\t\t\t\tCell: props => \n\t\t\t\t\t\t(<DetailModal id={props.original.id} type={nextProps.type} />)\n\t\t\t\t}, {\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\twidth: 60,\n\t\t\t\t\tshow: (nextProps.type === \"company\"),\n\t\t\t\t\tCell: props => \n\t\t\t\t\t\t(<EditModal data={props.original} type={nextProps.type} />)\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\n\trender() {\n\t\tlet otherType = (this.props.type === \"ctmAlumni\") ? \"ctmCompany\" : (this.props.type === \"ctmCompany\") ? \"ctmAlumni\" : \"\";\n\t\treturn (\n\t\t\t(this.props.view === \"ctm\") ?\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\n\t\t\t\t\t<div className=\"float-right\"><AddContact type={this.props.type}/></div>\n\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Contacts\"}</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"t-container overflow-hidden\">\n\t\t\t\t\t<ReactTable \n\t\t\t\t\t\tdata = {this.state.tableData}\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\n\t\t\t\t\t\tcolumns = {(this.props.type === 'alumni') ? this.state.columns_alumni : this.state.columns_company}\n\t\t\t\t\t\tdefaultPageSize = {100}\n\t\t\t\t\t\tsortable = {false}\n\t\t\t\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment> :\n\t\t\t<Fragment>\n\t\t\t\t{\n\t\t\t\t\t(this.props.type === \"ctmAlumni\" || this.props.type === \"ctmCompany\") ? \n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\n\t\t\t\t\t\t<Button className=\"float-right mr-4\" onClick={() => this.props.changeTable(otherType, this.state.ctm.id)}>View {otherType} updates</Button>\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \" Updates (\"+ this.state.ctm.name +\")\"}</h2>\n\t\t\t\t\t</div> :\n\t\t\t\t\t<div className=\"w-100 mt-4 mb-4\">\n\t\t\t\t\t\t{(this.props.type === \"ctm\") ? \"\" : <div className=\"float-right\"><AddContact type={this.props.type}/></div>}\n\t\t\t\t\t\t<h2 className=\"text-center\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}</h2>\n\t\t\t\t\t</div> \n\t\t\t\t}\n\t\t\t\t<div className=\"t-container overflow-hidden\">\n\t\t\t\t\t<ReactTable \n\t\t\t\t\t\tdata = {this.state.tableData}\n\t\t\t\t\t\tLoadingComponent = {LoadingIndicator}\n\t\t\t\t\t\tcolumns = {\n\t\t\t\t\t\t\t(this.props.type === 'alumni' || this.props.type === 'ctmAlumni') \n\t\t\t\t\t\t\t? this.state.columns_alumni \n\t\t\t\t\t\t\t: (this.props.type === 'company' || this.props.type === 'ctmCompany') \n\t\t\t\t\t\t\t? this.state.columns_company\n\t\t\t\t\t\t\t: this.state.columns_ctm\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultPageSize = {100}\n\t\t\t\t\t\tsortable = {false}\n\t\t\t\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\talumni: state.alumni,\n\t\tcompany: state.company,\n\t\tctm: state.ctm\n\t}\n}\n\nexport default connect(mapStateToProps)(Table);","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport sflogo from '../../assets/sflogo.png'\nimport {\n    Collapse, Navbar, NavbarToggler, NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap'\n\nclass Header extends React.Component {\n    state = {\n        isOpen: false,\n    }\n\n    toggle = () => {\n        this.setState({isOpen: !this.state.isOpen});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    className={\"app-header header-shadow\"}\n                    transitionName=\"HeaderAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={1500}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        <div className=\"w-100\">\n                            <Navbar light expand=\"md\">\n                                <NavbarBrand className=\"mr-auto\">\n                                    <img className=\"float-left\" src={sflogo} alt=\"SF-logo\" width=\"40px\"/>\n                                    <h2 className=\"ml-2 float-left\">SF diary</h2>\n                                </NavbarBrand>\n                                <NavbarToggler onClick={this.toggle} />\n                                    <Collapse isOpen={this.state.isOpen} navbar>\n                                        <Nav className=\"ml-auto\" navbar>\n                                            {\n                                                (this.props.type === 'cth')\n                                                ? <NavItem onClick={() => this.props.changeTable('ctm')}><NavLink>CTM</NavLink></NavItem>\n                                                : \"\"\n                                            } \n                                            <NavItem onClick={() => this.props.changeTable('alumni')}><NavLink>Alumni</NavLink></NavItem>\n                                            <NavItem onClick={() => this.props.changeTable('company')}><NavLink>Company</NavLink></NavItem>\n                                            <NavItem onClick={() => this.props.logout()}><NavLink>Log Out</NavLink></NavItem>\n                                        </Nav>\n                                    </Collapse>\n                            </Navbar>\n                        </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n\nexport default Header;","import React, { Component, Fragment } from 'react'\nimport auth from '../../Config/Auth'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { addAlumni, addCompany } from '../../Actions'\nimport Table from '../utilities/Table'\nimport { getData } from '../../services'\nimport Header from '../utilities/header'\n\nclass CTM extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tautoLogout: false,\n\t\t\ttable: 'alumni',\n\t\t\tallData: false\n\t\t}\n\t\tthis.events = [\n      \"load\",\n      \"mousemove\",\n      \"mousedown\",\n      \"click\",\n      \"scroll\",\n      \"keypress\"\n    ];\n\n    for (var i in this.events) {\n      window.addEventListener(this.events[i], this.resetTimeout);\n    }\n\n\t\tthis.setTimeout();\n\t}\n\n\tclearTimeout() {\n    if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\n  }\n\n\tsetTimeout = () => {\n    this.logoutTimeout = setTimeout(this.autoLogout, 600 * 1000);\n  }\n\n  autoLogout = () => {\n  \tthis.setState({ autoLogout: true });\n  \tthis.handleLogout();\n  }\n\n  resetTimeout = () => {\n  \tthis.clearTimeout();\n  \tthis.setTimeout();\n  }\n\n  destroy = () => {\n    this.clearTimeout();\n\n    for (var i in this.events) {\n      window.removeEventListener(this.events[i], this.resetTimeout);\n    }\n  }\n\n\tasync componentDidMount() {\n\t\tif (auth.isAuthenticated() !== 'ctm') {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\telse await this.getAllData();\n\t}\n\n\tgetAllData = async () => {\n\t\tconst temp = {\n\t\t\tid: localStorage.getItem('id'),\n\t\t\ttype: 'alumni'\n\t\t};\n\t\tconst alumniData = await getData(temp);\n\t\tthis.props.addAlumni(alumniData.data);\n\t\t\n\t\tconst temp2 = {\n\t\t\tid: localStorage.getItem('id'),\n\t\t\ttype: 'company'\n\t\t};\n\t\tconst companyData = await getData(temp2);\n\t\tthis.props.addCompany(companyData.data);\n\t}\n\n\thandleLogout = () => {\n\t\tif (this.state.autoLogout)\n\t\t\talert(\"You have been logged out due to inactivity\");\n\t\tthis.props.addAlumni([]);\n\t\tthis.props.addCompany([]);\n\t\tthis.destroy();\n\t\tauth.logout(() => {\n\t\t\tthis.props.history.push('/');\n\t\t});\n\t}\n\n\tchangeTable = async (tableName) => {\n\t\tawait this.getAllData();\n\t\tthis.setState({ table: tableName });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n        \t<Header changeTable={this.changeTable} type=\"ctm\" logout={this.handleLogout}/>\n\t\t\t\t\t<Table view=\"ctm\" type={this.state.table} id={localStorage.getItem('id')}/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserDetails: state.userDetails\n\t}\n}\n\nconst matchDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\taddAlumni: addAlumni,\n\t\taddCompany: addCompany\n\t}, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(CTM);","import React, { Component, Fragment } from 'react'\nimport auth from '../../Config/Auth'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { addAlumni, addCompany, addCTM } from '../../Actions'\nimport Table from '../utilities/Table'\nimport { getData, getCTMS } from '../../services'\nimport Header from '../utilities/header'\n\nclass CTH extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tautoLogout: false,\n\t\t\ttable: 'alumni'\n\t\t}\n\t\tthis.events = [\n      \"load\",\n      \"mousemove\",\n      \"mousedown\",\n      \"click\",\n      \"scroll\",\n      \"keypress\"\n    ];\n\n    for (var i in this.events) {\n      window.addEventListener(this.events[i], this.resetTimeout);\n    }\n\n\t\tthis.setTimeout();\n\t}\n\n\tclearTimeout() {\n    if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\n  }\n\n\tsetTimeout = () => {\n    this.logoutTimeout = setTimeout(this.autoLogout, 600 * 1000);\n  }\n\n  autoLogout = () => {\n  \tthis.setState({ autoLogout: true });\n  \tthis.handleLogout();\n  }\n\n  resetTimeout = () => {\n  \tthis.clearTimeout();\n  \tthis.setTimeout();\n  }\n\n  destroy = () => {\n    this.clearTimeout();\n\n    for (var i in this.events) {\n      window.removeEventListener(this.events[i], this.resetTimeout);\n    }\n  }\n\n\tasync componentDidMount() {\n\t\tif (auth.isAuthenticated() !== 'cth') {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\telse await this.getAllData(localStorage.getItem('id'));\n\t}\n\n\tgetAllData = async (id) => {\n\t\tconst temp = {\n\t\t\tid: id,\n\t\t\ttype: 'alumni'\n\t\t};\n\t\tconst alumniData = await getData(temp);\n\t\tthis.props.addAlumni(alumniData.data);\n\t\t\n\t\tconst temp2 = {\n\t\t\tid: id,\n\t\t\ttype: 'company'\n\t\t};\n\t\tconst companyData = await getData(temp2);\n\t\tthis.props.addCompany(companyData.data);\n\n\t\tconst temp3 = {\n\t\t\tid: localStorage.getItem('id'),\n\t\t\ttype: 'cth'\n\t\t};\n\t\tconst ctmData = await getCTMS(temp3);\n\t\tthis.props.addCTM(ctmData.data);\n\t}\n\n\thandleLogout = () => {\n\t\tif (this.state.autoLogout)\n\t\t\talert(\"You have been logged out due to inactivity\");\n\t\tthis.props.addAlumni([]);\n\t\tthis.props.addCompany([]);\n\t\tthis.props.addCTM([]);\n\t\tthis.destroy();\n\t\tauth.logout(() => {\n\t\t\tthis.props.history.push('/');\n\t\t});\n\t}\n\n\tchangeTable = async (tableName, id=localStorage.getItem('id')) => {\n\t\tawait this.getAllData(id);\n\t\tthis.setState({ table: tableName })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n        \t<Header changeTable={this.changeTable} type=\"cth\" logout={this.handleLogout}/>\n        \t<Table view=\"cth\" type={this.state.table} changeTable={this.changeTable}/>\n\t\t\t\t\t{/*(this.state.table === 'ctm') ? <CTMTable /> : <Table type={this.state.table} />*/}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserDetails: state.userDetails\n\t}\n}\n\nconst matchDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\taddAlumni: addAlumni,\n\t\taddCompany: addCompany,\n\t\taddCTM: addCTM\n\t}, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(CTH);","import React from 'react';\nimport './Stylesheets/base.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Landing from './Components/Landing'\nimport {PrivateRoute} from './utility/PrivateRoute'\nimport CTM from './Components/ctm'\nimport CTH from './Components/cth'\n\nfunction App() {\n  return (\n  \t<BrowserRouter>\n  \t\t<Switch>\n\t\t    <Route exact path = '/' component = {Landing} />\n\t\t    <PrivateRoute path = '/ctm' component = {CTM} />\n\t\t    <PrivateRoute path = '/cth' component = {CTH} />\n\t\t    <Route component = {Landing} />\n\t    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React, {Fragment} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nclass Footer extends React.Component {\n\n    state = {\n        modal: false\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"app-footer newFooter\">\n                    <div className=\"app-footer__inner\">\n                        <div className=\"app-footer-right\">\n                            <span className=\"d-inline-block mb-2 mr-2\">\n                                <Button color=\"link\" onClick={this.toggle}>Credits</Button>\n                                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                                    <ModalHeader toggle={this.toggle}>Credits</ModalHeader>\n                                    <ModalBody>\n                                        Kashish Goyal\n                                    </ModalBody>\n                                    <ModalFooter>\n                                        <Button color=\"link\" onClick={this.toggle}>Cancel</Button>\n                                    </ModalFooter>\n                                </Modal>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )}\n}\n\nexport default Footer;","const initialState = [];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'ADD_ALUMNI_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initialState = [];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'ADD_COMPANY_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initialState = [];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'ADD_CTM_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initialState = [];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'ADD_USER_DETAILS':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initialState = [\n\t{\n    Header: 'Name',\n    accessor: 'name',\n\tindex: 1\n    },\n\t{\n    Header: 'Phone No',\n    accessor: 'mobile',\n\tindex: 2\n    },\n\t{\n    Header: 'Email',\n    accessor: 'email',\n\tindex: 3\n    },\n\t{\n    Header: 'LinkedIn Link',\n    accessor: 'linkedin',\n\tindex: 4\n    },\n\t{\n    Header: 'Address',\n    accessor: 'addr',\n\tindex: 5\n    },\n\t{\n    Header: 'Remarks',\n    accessor: 'remarks',\n\tindex: 6\n    },\n\t{\n    Header: 'Updates',\n    accessor: 'updates',\n\tindex: 7\n    }\n];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'ALUMNI_DETAIL_TABLE':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initialState = [\n\t{\n    Header: 'Compay Name',\n    accessor: 'company_name',\n\tindex: 1\n    },\n    {\n    Header: 'Contact Person Name',\n    accessor: 'contact_name',\n    index: 2\n    },\n\t{\n    Header: 'Phone No',\n    accessor: 'mobile',\n\tindex: 3\n    },\n\t{\n    Header: 'Email',\n    accessor: 'email',\n\tindex: 4\n    },\n\t{\n    Header: 'Post of Contact',\n    accessor: 'post',\n\tindex: 5\n    },\n\t{\n    Header: 'Address',\n    accessor: 'addr',\n\tindex: 6\n    },\n\t{\n    Header: 'Remarks',\n    accessor: 'remarks',\n\tindex: 7\n    },\n\t{\n    Header: 'Updates',\n    accessor: 'updates',\n\tindex: 8\n    }\n];\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case 'COMPANY_DETAIL_TABLE':\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport alumniData from './alumniData'\nimport companyData from './companyData'\nimport ctmData from './ctmData'\nimport userDetails from './userDetails'\nimport alumniDetailTable from './alumniDetailTable'\nimport companyDetailTable from './companyDetailTable'\n\nconst reducers = combineReducers({\n\talumni: alumniData,\n\tcompany: companyData,\n\tuserDetails: userDetails,\n\talumniDetailTable: alumniDetailTable,\n\tcompanyDetailTable: companyDetailTable,\n\tctm: ctmData\n});\n\nexport default reducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Footer from './Components/utilities/footer'\nimport {createStore, applyMiddleware} from 'redux';\nimport Reducers from \"./Reducers\";\nimport { Provider } from \"react-redux\";\nimport promise from 'redux-promise-middleware'\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(\n  Reducers,\n  applyMiddleware(promise)\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t\t<Footer />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sflogo.98f322d5.png\";"],"sourceRoot":""}